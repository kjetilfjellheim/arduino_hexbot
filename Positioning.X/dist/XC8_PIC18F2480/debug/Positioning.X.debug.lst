

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sun Oct 01 06:35:08 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F2480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24  0000                     
    25                           ; Version 1.44
    26                           ; Generated 14/09/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F2480 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	idataCOMRAM
    61  00033E                     __pidataCOMRAM:
    62                           	opt stack 0
    63                           
    64                           ;initializer for _SERVO26
    65  00033E  08                 	db	low STR_18
    66  00033F  3F                 	db	high STR_18
    67                           
    68                           ;initializer for _SERVO25
    69  000340  44                 	db	low STR_17
    70  000341  3F                 	db	high STR_17
    71                           
    72                           ;initializer for _SERVO24
    73  000342  80                 	db	low STR_16
    74  000343  3F                 	db	high STR_16
    75                           
    76                           ;initializer for _SERVO22
    77  000344  F9                 	db	low STR_15
    78  000345  3E                 	db	high STR_15
    79                           
    80                           ;initializer for _SERVO21
    81  000346  35                 	db	low STR_14
    82  000347  3F                 	db	high STR_14
    83                           
    84                           ;initializer for _SERVO20
    85  000348  17                 	db	low STR_13
    86  000349  3F                 	db	high STR_13
    87                           
    88                           ;initializer for _SERVO18
    89  00034A  62                 	db	low STR_12
    90  00034B  3F                 	db	high STR_12
    91                           
    92                           ;initializer for _SERVO17
    93  00034C  26                 	db	low STR_11
    94  00034D  3F                 	db	high STR_11
    95                           
    96                           ;initializer for _SERVO16
    97  00034E  53                 	db	low STR_10
    98  00034F  3F                 	db	high STR_10
    99                           
   100                           ;initializer for _SERVO10
   101  000350  71                 	db	low STR_9
   102  000351  3F                 	db	high STR_9
   103                           
   104                           ;initializer for _SERVO9
   105  000352  C7                 	db	low STR_8
   106  000353  3F                 	db	high STR_8
   107                           
   108                           ;initializer for _SERVO8
   109  000354  8F                 	db	low STR_7
   110  000355  3F                 	db	high STR_7
   111                           
   112                           ;initializer for _SERVO6
   113  000356  D5                 	db	low STR_6
   114  000357  3F                 	db	high STR_6
   115                           
   116                           ;initializer for _SERVO5
   117  000358  B9                 	db	low STR_5
   118  000359  3F                 	db	high STR_5
   119                           
   120                           ;initializer for _SERVO4
   121  00035A  9D                 	db	low STR_4
   122  00035B  3F                 	db	high STR_4
   123                           
   124                           ;initializer for _SERVO2
   125  00035C  E3                 	db	low STR_3
   126  00035D  3F                 	db	high STR_3
   127                           
   128                           ;initializer for _SERVO1
   129  00035E  F1                 	db	low STR_2
   130  00035F  3F                 	db	high STR_2
   131                           
   132                           ;initializer for _SERVO0
   133  000360  AB                 	db	low STR_1
   134  000361  3F                 	db	high STR_1
   135  0000                     _OSCCONbits	set	4051
   136  0000                     _OSCTUNEbits	set	3995
   137  0000                     _TXREG	set	4013
   138  0000                     _TRISCbits	set	3988
   139  0000                     _RCSTAbits	set	4011
   140  0000                     _SPBRGH	set	4016
   141  0000                     _SPBRG	set	4015
   142  0000                     _TXSTAbits	set	4012
   143  0000                     _BAUDCONbits	set	4024
   144  0000                     _TRMT	set	32097
   145                           
   146                           	psect	mediumconst
   147  003EF8                     __pmediumconst:
   148                           	opt stack 0
   149  003EF8  00                 	db	0
   150  003EF9                     STR_15:
   151  003EF9  23                 	db	35
   152  003EFA  32                 	db	50	;'2'
   153  003EFB  32                 	db	50	;'2'
   154  003EFC  50                 	db	80	;'P'
   155  003EFD  31                 	db	49	;'1'
   156  003EFE  30                 	db	48	;'0'
   157  003EFF  30                 	db	48	;'0'
   158  003F00  30                 	db	48	;'0'
   159  003F01  54                 	db	84	;'T'
   160  003F02  31                 	db	49	;'1'
   161  003F03  30                 	db	48	;'0'
   162  003F04  30                 	db	48	;'0'
   163  003F05  30                 	db	48	;'0'
   164  003F06  0D                 	db	13
   165  003F07  00                 	db	0
   166  003F08                     STR_18:
   167  003F08  23                 	db	35
   168  003F09  32                 	db	50	;'2'
   169  003F0A  36                 	db	54	;'6'
   170  003F0B  50                 	db	80	;'P'
   171  003F0C  31                 	db	49	;'1'
   172  003F0D  30                 	db	48	;'0'
   173  003F0E  30                 	db	48	;'0'
   174  003F0F  30                 	db	48	;'0'
   175  003F10  54                 	db	84	;'T'
   176  003F11  31                 	db	49	;'1'
   177  003F12  30                 	db	48	;'0'
   178  003F13  30                 	db	48	;'0'
   179  003F14  30                 	db	48	;'0'
   180  003F15  0D                 	db	13
   181  003F16  00                 	db	0
   182  003F17                     STR_13:
   183  003F17  23                 	db	35
   184  003F18  32                 	db	50	;'2'
   185  003F19  30                 	db	48	;'0'
   186  003F1A  50                 	db	80	;'P'
   187  003F1B  32                 	db	50	;'2'
   188  003F1C  30                 	db	48	;'0'
   189  003F1D  30                 	db	48	;'0'
   190  003F1E  30                 	db	48	;'0'
   191  003F1F  54                 	db	84	;'T'
   192  003F20  31                 	db	49	;'1'
   193  003F21  30                 	db	48	;'0'
   194  003F22  30                 	db	48	;'0'
   195  003F23  30                 	db	48	;'0'
   196  003F24  0D                 	db	13
   197  003F25  00                 	db	0
   198  003F26                     STR_11:
   199  003F26  23                 	db	35
   200  003F27  31                 	db	49	;'1'
   201  003F28  37                 	db	55	;'7'
   202  003F29  50                 	db	80	;'P'
   203  003F2A  31                 	db	49	;'1'
   204  003F2B  32                 	db	50	;'2'
   205  003F2C  30                 	db	48	;'0'
   206  003F2D  30                 	db	48	;'0'
   207  003F2E  54                 	db	84	;'T'
   208  003F2F  31                 	db	49	;'1'
   209  003F30  30                 	db	48	;'0'
   210  003F31  30                 	db	48	;'0'
   211  003F32  30                 	db	48	;'0'
   212  003F33  0D                 	db	13
   213  003F34  00                 	db	0
   214  003F35                     STR_14:
   215  003F35  23                 	db	35
   216  003F36  32                 	db	50	;'2'
   217  003F37  31                 	db	49	;'1'
   218  003F38  50                 	db	80	;'P'
   219  003F39  31                 	db	49	;'1'
   220  003F3A  33                 	db	51	;'3'
   221  003F3B  30                 	db	48	;'0'
   222  003F3C  30                 	db	48	;'0'
   223  003F3D  54                 	db	84	;'T'
   224  003F3E  31                 	db	49	;'1'
   225  003F3F  30                 	db	48	;'0'
   226  003F40  30                 	db	48	;'0'
   227  003F41  30                 	db	48	;'0'
   228  003F42  0D                 	db	13
   229  003F43  00                 	db	0
   230  003F44                     STR_17:
   231  003F44  23                 	db	35
   232  003F45  32                 	db	50	;'2'
   233  003F46  35                 	db	53	;'5'
   234  003F47  50                 	db	80	;'P'
   235  003F48  31                 	db	49	;'1'
   236  003F49  34                 	db	52	;'4'
   237  003F4A  30                 	db	48	;'0'
   238  003F4B  30                 	db	48	;'0'
   239  003F4C  54                 	db	84	;'T'
   240  003F4D  31                 	db	49	;'1'
   241  003F4E  30                 	db	48	;'0'
   242  003F4F  30                 	db	48	;'0'
   243  003F50  30                 	db	48	;'0'
   244  003F51  0D                 	db	13
   245  003F52  00                 	db	0
   246  003F53                     STR_10:
   247  003F53  23                 	db	35
   248  003F54  31                 	db	49	;'1'
   249  003F55  36                 	db	54	;'6'
   250  003F56  50                 	db	80	;'P'
   251  003F57  31                 	db	49	;'1'
   252  003F58  34                 	db	52	;'4'
   253  003F59  30                 	db	48	;'0'
   254  003F5A  30                 	db	48	;'0'
   255  003F5B  54                 	db	84	;'T'
   256  003F5C  31                 	db	49	;'1'
   257  003F5D  30                 	db	48	;'0'
   258  003F5E  30                 	db	48	;'0'
   259  003F5F  30                 	db	48	;'0'
   260  003F60  0D                 	db	13
   261  003F61  00                 	db	0
   262  003F62                     STR_12:
   263  003F62  23                 	db	35
   264  003F63  31                 	db	49	;'1'
   265  003F64  38                 	db	56	;'8'
   266  003F65  50                 	db	80	;'P'
   267  003F66  31                 	db	49	;'1'
   268  003F67  35                 	db	53	;'5'
   269  003F68  30                 	db	48	;'0'
   270  003F69  30                 	db	48	;'0'
   271  003F6A  54                 	db	84	;'T'
   272  003F6B  31                 	db	49	;'1'
   273  003F6C  30                 	db	48	;'0'
   274  003F6D  30                 	db	48	;'0'
   275  003F6E  30                 	db	48	;'0'
   276  003F6F  0D                 	db	13
   277  003F70  00                 	db	0
   278  003F71                     STR_9:
   279  003F71  23                 	db	35
   280  003F72  31                 	db	49	;'1'
   281  003F73  30                 	db	48	;'0'
   282  003F74  50                 	db	80	;'P'
   283  003F75  31                 	db	49	;'1'
   284  003F76  38                 	db	56	;'8'
   285  003F77  30                 	db	48	;'0'
   286  003F78  30                 	db	48	;'0'
   287  003F79  54                 	db	84	;'T'
   288  003F7A  31                 	db	49	;'1'
   289  003F7B  30                 	db	48	;'0'
   290  003F7C  30                 	db	48	;'0'
   291  003F7D  30                 	db	48	;'0'
   292  003F7E  0D                 	db	13
   293  003F7F  00                 	db	0
   294  003F80                     STR_16:
   295  003F80  23                 	db	35
   296  003F81  32                 	db	50	;'2'
   297  003F82  34                 	db	52	;'4'
   298  003F83  50                 	db	80	;'P'
   299  003F84  31                 	db	49	;'1'
   300  003F85  39                 	db	57	;'9'
   301  003F86  30                 	db	48	;'0'
   302  003F87  30                 	db	48	;'0'
   303  003F88  54                 	db	84	;'T'
   304  003F89  31                 	db	49	;'1'
   305  003F8A  30                 	db	48	;'0'
   306  003F8B  30                 	db	48	;'0'
   307  003F8C  30                 	db	48	;'0'
   308  003F8D  0D                 	db	13
   309  003F8E  00                 	db	0
   310  003F8F                     STR_7:
   311  003F8F  23                 	db	35
   312  003F90  38                 	db	56	;'8'
   313  003F91  50                 	db	80	;'P'
   314  003F92  31                 	db	49	;'1'
   315  003F93  30                 	db	48	;'0'
   316  003F94  30                 	db	48	;'0'
   317  003F95  30                 	db	48	;'0'
   318  003F96  54                 	db	84	;'T'
   319  003F97  31                 	db	49	;'1'
   320  003F98  30                 	db	48	;'0'
   321  003F99  30                 	db	48	;'0'
   322  003F9A  30                 	db	48	;'0'
   323  003F9B  0D                 	db	13
   324  003F9C  00                 	db	0
   325  003F9D                     STR_4:
   326  003F9D  23                 	db	35
   327  003F9E  34                 	db	52	;'4'
   328  003F9F  50                 	db	80	;'P'
   329  003FA0  31                 	db	49	;'1'
   330  003FA1  34                 	db	52	;'4'
   331  003FA2  30                 	db	48	;'0'
   332  003FA3  30                 	db	48	;'0'
   333  003FA4  54                 	db	84	;'T'
   334  003FA5  31                 	db	49	;'1'
   335  003FA6  30                 	db	48	;'0'
   336  003FA7  30                 	db	48	;'0'
   337  003FA8  30                 	db	48	;'0'
   338  003FA9  0D                 	db	13
   339  003FAA  00                 	db	0
   340  003FAB                     STR_1:
   341  003FAB  23                 	db	35
   342  003FAC  30                 	db	48	;'0'
   343  003FAD  50                 	db	80	;'P'
   344  003FAE  31                 	db	49	;'1'
   345  003FAF  35                 	db	53	;'5'
   346  003FB0  30                 	db	48	;'0'
   347  003FB1  30                 	db	48	;'0'
   348  003FB2  54                 	db	84	;'T'
   349  003FB3  31                 	db	49	;'1'
   350  003FB4  30                 	db	48	;'0'
   351  003FB5  30                 	db	48	;'0'
   352  003FB6  30                 	db	48	;'0'
   353  003FB7  0D                 	db	13
   354  003FB8  00                 	db	0
   355  003FB9                     STR_5:
   356  003FB9  23                 	db	35
   357  003FBA  35                 	db	53	;'5'
   358  003FBB  50                 	db	80	;'P'
   359  003FBC  31                 	db	49	;'1'
   360  003FBD  36                 	db	54	;'6'
   361  003FBE  30                 	db	48	;'0'
   362  003FBF  30                 	db	48	;'0'
   363  003FC0  54                 	db	84	;'T'
   364  003FC1  31                 	db	49	;'1'
   365  003FC2  30                 	db	48	;'0'
   366  003FC3  30                 	db	48	;'0'
   367  003FC4  30                 	db	48	;'0'
   368  003FC5  0D                 	db	13
   369  003FC6  00                 	db	0
   370  003FC7                     STR_8:
   371  003FC7  23                 	db	35
   372  003FC8  39                 	db	57	;'9'
   373  003FC9  50                 	db	80	;'P'
   374  003FCA  31                 	db	49	;'1'
   375  003FCB  36                 	db	54	;'6'
   376  003FCC  30                 	db	48	;'0'
   377  003FCD  30                 	db	48	;'0'
   378  003FCE  54                 	db	84	;'T'
   379  003FCF  31                 	db	49	;'1'
   380  003FD0  30                 	db	48	;'0'
   381  003FD1  30                 	db	48	;'0'
   382  003FD2  30                 	db	48	;'0'
   383  003FD3  0D                 	db	13
   384  003FD4  00                 	db	0
   385  003FD5                     STR_6:
   386  003FD5  23                 	db	35
   387  003FD6  36                 	db	54	;'6'
   388  003FD7  50                 	db	80	;'P'
   389  003FD8  31                 	db	49	;'1'
   390  003FD9  37                 	db	55	;'7'
   391  003FDA  30                 	db	48	;'0'
   392  003FDB  30                 	db	48	;'0'
   393  003FDC  54                 	db	84	;'T'
   394  003FDD  31                 	db	49	;'1'
   395  003FDE  30                 	db	48	;'0'
   396  003FDF  30                 	db	48	;'0'
   397  003FE0  30                 	db	48	;'0'
   398  003FE1  0D                 	db	13
   399  003FE2  00                 	db	0
   400  003FE3                     STR_3:
   401  003FE3  23                 	db	35
   402  003FE4  32                 	db	50	;'2'
   403  003FE5  50                 	db	80	;'P'
   404  003FE6  31                 	db	49	;'1'
   405  003FE7  38                 	db	56	;'8'
   406  003FE8  30                 	db	48	;'0'
   407  003FE9  30                 	db	48	;'0'
   408  003FEA  54                 	db	84	;'T'
   409  003FEB  31                 	db	49	;'1'
   410  003FEC  30                 	db	48	;'0'
   411  003FED  30                 	db	48	;'0'
   412  003FEE  30                 	db	48	;'0'
   413  003FEF  0D                 	db	13
   414  003FF0  00                 	db	0
   415  003FF1                     STR_2:
   416  003FF1  23                 	db	35
   417  003FF2  31                 	db	49	;'1'
   418  003FF3  50                 	db	80	;'P'
   419  003FF4  31                 	db	49	;'1'
   420  003FF5  39                 	db	57	;'9'
   421  003FF6  30                 	db	48	;'0'
   422  003FF7  30                 	db	48	;'0'
   423  003FF8  54                 	db	84	;'T'
   424  003FF9  31                 	db	49	;'1'
   425  003FFA  30                 	db	48	;'0'
   426  003FFB  30                 	db	48	;'0'
   427  003FFC  30                 	db	48	;'0'
   428  003FFD  0D                 	db	13
   429  003FFE  00                 	db	0
   430                           
   431                           ; #config settings
   432  003FFF  00                 	db	0	; dummy byte at the end
   433  0000                     
   434                           	psect	cinit
   435  000310                     __pcinit:
   436                           	opt stack 0
   437  000310                     start_initialization:
   438                           	opt stack 0
   439  000310                     __initialization:
   440                           	opt stack 0
   441                           
   442                           ; Initialize objects allocated to COMRAM (36 bytes)
   443                           ; load TBLPTR registers with __pidataCOMRAM
   444  000310  0E3E               	movlw	low __pidataCOMRAM
   445  000312  6EF6               	movwf	tblptrl,c
   446  000314  0E03               	movlw	high __pidataCOMRAM
   447  000316  6EF7               	movwf	tblptrh,c
   448  000318  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   449  00031A  6EF8               	movwf	tblptru,c
   450  00031C  EE00  F028         	lfsr	0,__pdataCOMRAM
   451  000320  EE10 F024          	lfsr	1,36
   452  000324                     copy_data0:
   453  000324  0009               	tblrd		*+
   454  000326  CFF5 FFEE          	movff	tablat,postinc0
   455  00032A  50E5               	movf	postdec1,w,c
   456  00032C  50E1               	movf	fsr1l,w,c
   457  00032E  E1FA               	bnz	copy_data0
   458  000330                     end_of_initialization:
   459                           	opt stack 0
   460  000330                     __end_of__initialization:
   461                           	opt stack 0
   462  000330  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   463  000332  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   464  000334  0E00               	movlw	low (__Lmediumconst shr (0+16))
   465  000336  6EF8               	movwf	tblptru,c
   466  000338  0100               	movlb	0
   467  00033A  EF65  F000         	goto	_main	;jump to C main() function
   468                           tblptru	equ	0xFF8
   469                           tblptrh	equ	0xFF7
   470                           tblptrl	equ	0xFF6
   471                           tablat	equ	0xFF5
   472                           postinc0	equ	0xFEE
   473                           postdec1	equ	0xFE5
   474                           fsr1l	equ	0xFE1
   475                           
   476                           	psect	dataCOMRAM
   477  000028                     __pdataCOMRAM:
   478                           	opt stack 0
   479  000028                     _SERVO26:
   480                           	opt stack 0
   481  000028                     	ds	2
   482  00002A                     _SERVO25:
   483                           	opt stack 0
   484  00002A                     	ds	2
   485  00002C                     _SERVO24:
   486                           	opt stack 0
   487  00002C                     	ds	2
   488  00002E                     _SERVO22:
   489                           	opt stack 0
   490  00002E                     	ds	2
   491  000030                     _SERVO21:
   492                           	opt stack 0
   493  000030                     	ds	2
   494  000032                     _SERVO20:
   495                           	opt stack 0
   496  000032                     	ds	2
   497  000034                     _SERVO18:
   498                           	opt stack 0
   499  000034                     	ds	2
   500  000036                     _SERVO17:
   501                           	opt stack 0
   502  000036                     	ds	2
   503  000038                     _SERVO16:
   504                           	opt stack 0
   505  000038                     	ds	2
   506  00003A                     _SERVO10:
   507                           	opt stack 0
   508  00003A                     	ds	2
   509  00003C                     _SERVO9:
   510                           	opt stack 0
   511  00003C                     	ds	2
   512  00003E                     _SERVO8:
   513                           	opt stack 0
   514  00003E                     	ds	2
   515  000040                     _SERVO6:
   516                           	opt stack 0
   517  000040                     	ds	2
   518  000042                     _SERVO5:
   519                           	opt stack 0
   520  000042                     	ds	2
   521  000044                     _SERVO4:
   522                           	opt stack 0
   523  000044                     	ds	2
   524  000046                     _SERVO2:
   525                           	opt stack 0
   526  000046                     	ds	2
   527  000048                     _SERVO1:
   528                           	opt stack 0
   529  000048                     	ds	2
   530  00004A                     _SERVO0:
   531                           	opt stack 0
   532  00004A                     	ds	2
   533                           tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           postinc0	equ	0xFEE
   538                           postdec1	equ	0xFE5
   539                           fsr1l	equ	0xFE1
   540                           
   541                           	psect	cstackBANK0
   542  000060                     __pcstackBANK0:
   543                           	opt stack 0
   544  000060                     ??_UART_Init:
   545  000060                     ?_strlen:
   546                           	opt stack 0
   547  000060                     UART_Write@data:
   548                           	opt stack 0
   549  000060                     strlen@s:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0x0
   553  000060                     	ds	2
   554  000062                     ??_strlen:
   555                           
   556                           ; 1 bytes @ 0x2
   557  000062                     	ds	2
   558  000064                     strlen@cp:
   559                           	opt stack 0
   560                           
   561                           ; 2 bytes @ 0x4
   562  000064                     	ds	2
   563  000066                     UART_Write_String@str:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0x6
   567  000066                     	ds	2
   568  000068                     ??_UART_Write_String:
   569                           
   570                           ; 1 bytes @ 0x8
   571  000068                     	ds	2
   572  00006A                     UART_Write_String@arrayLength:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0xA
   576  00006A                     	ds	2
   577  00006C                     UART_Write_String@a:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0xC
   581  00006C                     	ds	1
   582  00006D                     UART_Write_String@i:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0xD
   586  00006D                     	ds	2
   587  00006F                     tblptru	equ	0xFF8
   588                           tblptrh	equ	0xFF7
   589                           tblptrl	equ	0xFF6
   590                           tablat	equ	0xFF5
   591                           postinc0	equ	0xFEE
   592                           postdec1	equ	0xFE5
   593                           fsr1l	equ	0xFE1
   594                           
   595                           ; 1 bytes @ 0xF
   596                           
   597                           	psect	cstackCOMRAM
   598  000001                     __pcstackCOMRAM:
   599                           	opt stack 0
   600  000001                     ??_high_isr:
   601  000001                     
   602                           ; 1 bytes @ 0x0
   603  000001                     	ds	18
   604  000013                     ??_low_isr:
   605                           
   606                           ; 1 bytes @ 0x12
   607  000013                     	ds	21
   608                           tblptru	equ	0xFF8
   609                           tblptrh	equ	0xFF7
   610                           tblptrl	equ	0xFF6
   611                           tablat	equ	0xFF5
   612                           postinc0	equ	0xFEE
   613                           postdec1	equ	0xFE5
   614                           fsr1l	equ	0xFE1
   615                           
   616 ;;
   617 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   618 ;;
   619 ;; *************** function _main *****************
   620 ;; Defined at:
   621 ;;		line 52 in file "main.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   635 ;;      Params:         0       0       0       0
   636 ;;      Locals:         0       0       0       0
   637 ;;      Temps:          0       0       0       0
   638 ;;      Totals:         0       0       0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels required when called:    4
   641 ;; This function calls:
   642 ;;		_ConfigureOscillator
   643 ;;		_InitApp
   644 ;;		_UART_Init
   645 ;;		_UART_Write_String
   646 ;; This function is called by:
   647 ;;		Startup code after reset
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           	psect	text0
   652  0000CA                     __ptext0:
   653                           	opt stack 0
   654  0000CA                     _main:
   655                           	opt stack 27
   656                           
   657                           ;main.c: 54: ConfigureOscillator();
   658                           
   659                           ;incstack = 0
   660  0000CA  ECC9  F001         	call	_ConfigureOscillator	;wreg free
   661                           
   662                           ;main.c: 56: InitApp();
   663  0000CE  ECB1  F001         	call	_InitApp	;wreg free
   664                           
   665                           ;main.c: 58: UART_Init();
   666  0000D2  EC6E  F001         	call	_UART_Init	;wreg free
   667                           
   668                           ;main.c: 60: UART_Write_String(SERVO0);
   669  0000D6  C04A  F066         	movff	_SERVO0,UART_Write_String@str
   670  0000DA  C04B  F067         	movff	_SERVO0+1,UART_Write_String@str+1
   671  0000DE  EC23  F001         	call	_UART_Write_String	;wreg free
   672                           
   673                           ;main.c: 61: UART_Write_String(SERVO1);
   674  0000E2  C048  F066         	movff	_SERVO1,UART_Write_String@str
   675  0000E6  C049  F067         	movff	_SERVO1+1,UART_Write_String@str+1
   676  0000EA  EC23  F001         	call	_UART_Write_String	;wreg free
   677                           
   678                           ;main.c: 62: UART_Write_String(SERVO2);
   679  0000EE  C046  F066         	movff	_SERVO2,UART_Write_String@str
   680  0000F2  C047  F067         	movff	_SERVO2+1,UART_Write_String@str+1
   681  0000F6  EC23  F001         	call	_UART_Write_String	;wreg free
   682                           
   683                           ;main.c: 63: UART_Write_String(SERVO4);
   684  0000FA  C044  F066         	movff	_SERVO4,UART_Write_String@str
   685  0000FE  C045  F067         	movff	_SERVO4+1,UART_Write_String@str+1
   686  000102  EC23  F001         	call	_UART_Write_String	;wreg free
   687                           
   688                           ;main.c: 64: UART_Write_String(SERVO5);
   689  000106  C042  F066         	movff	_SERVO5,UART_Write_String@str
   690  00010A  C043  F067         	movff	_SERVO5+1,UART_Write_String@str+1
   691  00010E  EC23  F001         	call	_UART_Write_String	;wreg free
   692                           
   693                           ;main.c: 65: UART_Write_String(SERVO6);
   694  000112  C040  F066         	movff	_SERVO6,UART_Write_String@str
   695  000116  C041  F067         	movff	_SERVO6+1,UART_Write_String@str+1
   696  00011A  EC23  F001         	call	_UART_Write_String	;wreg free
   697                           
   698                           ;main.c: 66: UART_Write_String(SERVO8);
   699  00011E  C03E  F066         	movff	_SERVO8,UART_Write_String@str
   700  000122  C03F  F067         	movff	_SERVO8+1,UART_Write_String@str+1
   701  000126  EC23  F001         	call	_UART_Write_String	;wreg free
   702                           
   703                           ;main.c: 67: UART_Write_String(SERVO9);
   704  00012A  C03C  F066         	movff	_SERVO9,UART_Write_String@str
   705  00012E  C03D  F067         	movff	_SERVO9+1,UART_Write_String@str+1
   706  000132  EC23  F001         	call	_UART_Write_String	;wreg free
   707                           
   708                           ;main.c: 68: UART_Write_String(SERVO10);
   709  000136  C03A  F066         	movff	_SERVO10,UART_Write_String@str
   710  00013A  C03B  F067         	movff	_SERVO10+1,UART_Write_String@str+1
   711  00013E  EC23  F001         	call	_UART_Write_String	;wreg free
   712                           
   713                           ;main.c: 69: UART_Write_String(SERVO16);
   714  000142  C038  F066         	movff	_SERVO16,UART_Write_String@str
   715  000146  C039  F067         	movff	_SERVO16+1,UART_Write_String@str+1
   716  00014A  EC23  F001         	call	_UART_Write_String	;wreg free
   717                           
   718                           ;main.c: 70: UART_Write_String(SERVO17);
   719  00014E  C036  F066         	movff	_SERVO17,UART_Write_String@str
   720  000152  C037  F067         	movff	_SERVO17+1,UART_Write_String@str+1
   721  000156  EC23  F001         	call	_UART_Write_String	;wreg free
   722                           
   723                           ;main.c: 71: UART_Write_String(SERVO18);
   724  00015A  C034  F066         	movff	_SERVO18,UART_Write_String@str
   725  00015E  C035  F067         	movff	_SERVO18+1,UART_Write_String@str+1
   726  000162  EC23  F001         	call	_UART_Write_String	;wreg free
   727                           
   728                           ;main.c: 72: UART_Write_String(SERVO20);
   729  000166  C032  F066         	movff	_SERVO20,UART_Write_String@str
   730  00016A  C033  F067         	movff	_SERVO20+1,UART_Write_String@str+1
   731  00016E  EC23  F001         	call	_UART_Write_String	;wreg free
   732                           
   733                           ;main.c: 73: UART_Write_String(SERVO21);
   734  000172  C030  F066         	movff	_SERVO21,UART_Write_String@str
   735  000176  C031  F067         	movff	_SERVO21+1,UART_Write_String@str+1
   736  00017A  EC23  F001         	call	_UART_Write_String	;wreg free
   737                           
   738                           ;main.c: 74: UART_Write_String(SERVO22);
   739  00017E  C02E  F066         	movff	_SERVO22,UART_Write_String@str
   740  000182  C02F  F067         	movff	_SERVO22+1,UART_Write_String@str+1
   741  000186  EC23  F001         	call	_UART_Write_String	;wreg free
   742                           
   743                           ;main.c: 75: UART_Write_String(SERVO24);
   744  00018A  C02C  F066         	movff	_SERVO24,UART_Write_String@str
   745  00018E  C02D  F067         	movff	_SERVO24+1,UART_Write_String@str+1
   746  000192  EC23  F001         	call	_UART_Write_String	;wreg free
   747                           
   748                           ;main.c: 76: UART_Write_String(SERVO25);
   749  000196  C02A  F066         	movff	_SERVO25,UART_Write_String@str
   750  00019A  C02B  F067         	movff	_SERVO25+1,UART_Write_String@str+1
   751  00019E  EC23  F001         	call	_UART_Write_String	;wreg free
   752                           
   753                           ;main.c: 77: UART_Write_String(SERVO26);
   754  0001A2  C028  F066         	movff	_SERVO26,UART_Write_String@str
   755  0001A6  C029  F067         	movff	_SERVO26+1,UART_Write_String@str+1
   756  0001AA  EC23  F001         	call	_UART_Write_String	;wreg free
   757  0001AE                     l81:
   758  0001AE  D7FF               	goto	l81
   759  0001B0                     __end_of_main:
   760                           	opt stack 0
   761                           tblptru	equ	0xFF8
   762                           tblptrh	equ	0xFF7
   763                           tblptrl	equ	0xFF6
   764                           tablat	equ	0xFF5
   765                           postinc0	equ	0xFEE
   766                           postdec1	equ	0xFE5
   767                           fsr1l	equ	0xFE1
   768                           
   769 ;; *************** function _UART_Write_String *****************
   770 ;; Defined at:
   771 ;;		line 103 in file "main.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;  str             2    6[BANK0 ] PTR const unsigned char 
   774 ;;		 -> STR_18(15), STR_17(15), STR_16(15), STR_15(15), 
   775 ;;		 -> STR_14(15), STR_13(15), STR_12(15), STR_11(15), 
   776 ;;		 -> STR_10(15), STR_9(15), STR_8(14), STR_7(14), 
   777 ;;		 -> STR_6(14), STR_5(14), STR_4(14), STR_3(14), 
   778 ;;		 -> STR_2(14), STR_1(14), 
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  a               1   12[BANK0 ] unsigned char 
   781 ;;  i               2   13[BANK0 ] unsigned int 
   782 ;;  arrayLength     2   10[BANK0 ] int 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   792 ;;      Params:         0       2       0       0
   793 ;;      Locals:         0       5       0       0
   794 ;;      Temps:          0       2       0       0
   795 ;;      Totals:         0       9       0       0
   796 ;;Total ram usage:        9 bytes
   797 ;; Hardware stack levels used:    1
   798 ;; Hardware stack levels required when called:    3
   799 ;; This function calls:
   800 ;;		_UART_Write
   801 ;;		_strlen
   802 ;; This function is called by:
   803 ;;		_main
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text1
   808  000246                     __ptext1:
   809                           	opt stack 0
   810  000246                     _UART_Write_String:
   811                           	opt stack 27
   812                           
   813                           ;main.c: 104: int arrayLength = strlen(str);
   814                           
   815                           ;incstack = 0
   816  000246  C066  F060         	movff	UART_Write_String@str,strlen@s
   817  00024A  C067  F061         	movff	UART_Write_String@str+1,strlen@s+1
   818  00024E  EC4D  F001         	call	_strlen	;wreg free
   819  000252  C060  F06A         	movff	?_strlen,UART_Write_String@arrayLength
   820  000256  C061  F06B         	movff	?_strlen+1,UART_Write_String@arrayLength+1
   821                           
   822                           ;main.c: 105: for (unsigned int i = 0; i<arrayLength; i++) {
   823  00025A  0E00               	movlw	0
   824  00025C  0100               	movlb	0	; () banked
   825  00025E  6F6E               	movwf	(UART_Write_String@i+1)& (0+255),b
   826  000260  0E00               	movlw	0
   827  000262  6F6D               	movwf	UART_Write_String@i& (0+255),b
   828  000264  D013               	goto	l90
   829  000266                     
   830                           ; BSR set to: 0
   831                           ;main.c: 106: char a = str[i];
   832                           
   833                           ; BSR set to: 0
   834  000266  516D               	movf	UART_Write_String@i& (0+255),w,b
   835  000268  2566               	addwf	UART_Write_String@str& (0+255),w,b
   836  00026A  6F68               	movwf	??_UART_Write_String& (0+255),b
   837  00026C  516E               	movf	(UART_Write_String@i+1)& (0+255),w,b
   838  00026E  2167               	addwfc	(UART_Write_String@str+1)& (0+255),w,b
   839  000270  6F69               	movwf	(??_UART_Write_String+1)& (0+255),b
   840  000272  C068  FFF6         	movff	??_UART_Write_String,tblptrl
   841  000276  C069  FFF7         	movff	??_UART_Write_String+1,tblptrh
   842  00027A                     	if	0	;tblptru may be non-zero
   843  00027A                     	endif
   844  00027A                     	if	0	;tblptru may be non-zero
   845  00027A                     	endif
   846  00027A  0008               	tblrd		*
   847  00027C  CFF5 F06C          	movff	tablat,UART_Write_String@a
   848                           
   849                           ; BSR set to: 0
   850                           ;main.c: 107: UART_Write(a);
   851  000280  516C               	movf	UART_Write_String@a& (0+255),w,b
   852  000282  ECC2  F001         	call	_UART_Write
   853  000286  0100               	movlb	0	; () banked
   854  000288  4B6D               	infsnz	UART_Write_String@i& (0+255),f,b
   855  00028A  2B6E               	incf	(UART_Write_String@i+1)& (0+255),f,b
   856  00028C                     l90:
   857                           
   858                           ; BSR set to: 0
   859                           
   860                           ; BSR set to: 0
   861  00028C  516A               	movf	UART_Write_String@arrayLength& (0+255),w,b
   862  00028E  5D6D               	subwf	UART_Write_String@i& (0+255),w,b
   863  000290  516B               	movf	(UART_Write_String@arrayLength+1)& (0+255),w,b
   864  000292  596E               	subwfb	(UART_Write_String@i+1)& (0+255),w,b
   865  000294  B0D8               	btfsc	status,0,c
   866  000296  0012               	return	
   867  000298  D7E6               	goto	l91
   868  00029A                     __end_of_UART_Write_String:
   869                           	opt stack 0
   870                           tblptru	equ	0xFF8
   871                           tblptrh	equ	0xFF7
   872                           tblptrl	equ	0xFF6
   873                           tablat	equ	0xFF5
   874                           postinc0	equ	0xFEE
   875                           postdec1	equ	0xFE5
   876                           fsr1l	equ	0xFE1
   877                           status	equ	0xFD8
   878                           
   879 ;; *************** function _strlen *****************
   880 ;; Defined at:
   881 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;  s               2    0[BANK0 ] PTR const unsigned char 
   884 ;;		 -> STR_18(15), STR_17(15), STR_16(15), STR_15(15), 
   885 ;;		 -> STR_14(15), STR_13(15), STR_12(15), STR_11(15), 
   886 ;;		 -> STR_10(15), STR_9(15), STR_8(14), STR_7(14), 
   887 ;;		 -> STR_6(14), STR_5(14), STR_4(14), STR_3(14), 
   888 ;;		 -> STR_2(14), STR_1(14), 
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
   891 ;;		 -> STR_18(15), STR_17(15), STR_16(15), STR_15(15), 
   892 ;;		 -> STR_14(15), STR_13(15), STR_12(15), STR_11(15), 
   893 ;;		 -> STR_10(15), STR_9(15), STR_8(14), STR_7(14), 
   894 ;;		 -> STR_6(14), STR_5(14), STR_4(14), STR_3(14), 
   895 ;;		 -> STR_2(14), STR_1(14), 
   896 ;; Return value:  Size  Location     Type
   897 ;;                  2    0[BANK0 ] unsigned int 
   898 ;; Registers used:
   899 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   905 ;;      Params:         0       2       0       0
   906 ;;      Locals:         0       2       0       0
   907 ;;      Temps:          0       2       0       0
   908 ;;      Totals:         0       6       0       0
   909 ;;Total ram usage:        6 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; Hardware stack levels required when called:    2
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_UART_Write_String
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text2
   920  00029A                     __ptext2:
   921                           	opt stack 0
   922  00029A                     _strlen:
   923                           	opt stack 27
   924                           
   925                           ; BSR set to: 0
   926                           ;incstack = 0
   927  00029A  C060  F064         	movff	strlen@s,strlen@cp
   928  00029E  C061  F065         	movff	strlen@s+1,strlen@cp+1
   929  0002A2  D003               	goto	l657
   930  0002A4  0100               	movlb	0	; () banked
   931  0002A6  4B64               	infsnz	strlen@cp& (0+255),f,b
   932  0002A8  2B65               	incf	(strlen@cp+1)& (0+255),f,b
   933  0002AA                     l657:
   934                           
   935                           ; BSR set to: 0
   936  0002AA  C064  FFF6         	movff	strlen@cp,tblptrl
   937  0002AE  C065  FFF7         	movff	strlen@cp+1,tblptrh
   938  0002B2                     	if	0	;tblptru may be non-zero
   939  0002B2                     	endif
   940  0002B2                     	if	0	;tblptru may be non-zero
   941  0002B2                     	endif
   942  0002B2  0008               	tblrd		*
   943  0002B4  50F5               	movf	tablat,w,c
   944  0002B6  0900               	iorlw	0
   945  0002B8  A4D8               	btfss	status,2,c
   946  0002BA  D7F4               	goto	l658
   947  0002BC  C060  F062         	movff	strlen@s,??_strlen
   948  0002C0  C061  F063         	movff	strlen@s+1,??_strlen+1
   949  0002C4  0100               	movlb	0	; () banked
   950  0002C6  1F62               	comf	??_strlen& (0+255),f,b
   951  0002C8  1F63               	comf	(??_strlen+1)& (0+255),f,b
   952  0002CA  4B62               	infsnz	??_strlen& (0+255),f,b
   953  0002CC  2B63               	incf	(??_strlen+1)& (0+255),f,b
   954  0002CE  5164               	movf	strlen@cp& (0+255),w,b
   955  0002D0  2562               	addwf	??_strlen& (0+255),w,b
   956  0002D2  6F60               	movwf	?_strlen& (0+255),b
   957  0002D4  5165               	movf	(strlen@cp+1)& (0+255),w,b
   958  0002D6  2163               	addwfc	(??_strlen+1)& (0+255),w,b
   959  0002D8  6F61               	movwf	(?_strlen+1)& (0+255),b
   960  0002DA  0012               	return	
   961  0002DC                     __end_of_strlen:
   962                           	opt stack 0
   963                           tblptru	equ	0xFF8
   964                           tblptrh	equ	0xFF7
   965                           tblptrl	equ	0xFF6
   966                           tablat	equ	0xFF5
   967                           postinc0	equ	0xFEE
   968                           postdec1	equ	0xFE5
   969                           fsr1l	equ	0xFE1
   970                           status	equ	0xFD8
   971                           
   972 ;; *************** function _UART_Write *****************
   973 ;; Defined at:
   974 ;;		line 111 in file "main.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;  data            1    wreg     unsigned char 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  data            1    0[BANK0 ] unsigned char 
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		wreg
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   988 ;;      Params:         0       0       0       0
   989 ;;      Locals:         0       1       0       0
   990 ;;      Temps:          0       0       0       0
   991 ;;      Totals:         0       1       0       0
   992 ;;Total ram usage:        1 bytes
   993 ;; Hardware stack levels used:    1
   994 ;; Hardware stack levels required when called:    2
   995 ;; This function calls:
   996 ;;		Nothing
   997 ;; This function is called by:
   998 ;;		_UART_Write_String
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           	psect	text3
  1003  000384                     __ptext3:
  1004                           	opt stack 0
  1005  000384                     _UART_Write:
  1006                           	opt stack 27
  1007                           
  1008                           ; BSR set to: 0
  1009                           ;incstack = 0
  1010                           ;UART_Write@data stored from wreg
  1011  000384  0100               	movlb	0	; () banked
  1012  000386  6F60               	movwf	UART_Write@data& (0+255),b
  1013  000388                     
  1014                           ;main.c: 112: while(!TRMT);
  1015  000388  A2AC               	btfss	4012,1,c	;volatile
  1016  00038A  D7FE               	goto	l903
  1017                           
  1018                           ;main.c: 113: TXREG = data;
  1019  00038C  C060  FFAD         	movff	UART_Write@data,4013	;volatile
  1020  000390  0012               	return		;funcret
  1021  000392                     __end_of_UART_Write:
  1022                           	opt stack 0
  1023                           tblptru	equ	0xFF8
  1024                           tblptrh	equ	0xFF7
  1025                           tblptrl	equ	0xFF6
  1026                           tablat	equ	0xFF5
  1027                           postinc0	equ	0xFEE
  1028                           postdec1	equ	0xFE5
  1029                           fsr1l	equ	0xFE1
  1030                           status	equ	0xFD8
  1031                           
  1032 ;; *************** function _UART_Init *****************
  1033 ;; Defined at:
  1034 ;;		line 85 in file "main.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;		None
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;		None
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      unsigned char 
  1041 ;; Registers used:
  1042 ;;		wreg, status,2
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1048 ;;      Params:         0       0       0       0
  1049 ;;      Locals:         0       0       0       0
  1050 ;;      Temps:          0       2       0       0
  1051 ;;      Totals:         0       2       0       0
  1052 ;;Total ram usage:        2 bytes
  1053 ;; Hardware stack levels used:    1
  1054 ;; Hardware stack levels required when called:    2
  1055 ;; This function calls:
  1056 ;;		Nothing
  1057 ;; This function is called by:
  1058 ;;		_main
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           	psect	text4
  1063  0002DC                     __ptext4:
  1064                           	opt stack 0
  1065  0002DC                     _UART_Init:
  1066                           	opt stack 28
  1067                           
  1068                           ;main.c: 86: BAUDCONbits.BRG16 = 0b1;
  1069                           
  1070                           ;incstack = 0
  1071  0002DC  86B8               	bsf	4024,3,c	;volatile
  1072                           
  1073                           ;main.c: 87: TXSTAbits.BRGH = 0b1;
  1074  0002DE  84AC               	bsf	4012,2,c	;volatile
  1075                           
  1076                           ;main.c: 88: SPBRG = 51;
  1077  0002E0  0E33               	movlw	51
  1078  0002E2  6EAF               	movwf	4015,c	;volatile
  1079                           
  1080                           ;main.c: 89: SPBRGH = 0;
  1081  0002E4  0E00               	movlw	0
  1082  0002E6  6EB0               	movwf	4016,c	;volatile
  1083                           
  1084                           ;main.c: 90: TXSTAbits.SYNC = 0b0;
  1085  0002E8  98AC               	bcf	4012,4,c	;volatile
  1086                           
  1087                           ;main.c: 91: RCSTAbits.SPEN = 0b1;
  1088  0002EA  8EAB               	bsf	4011,7,c	;volatile
  1089                           
  1090                           ;main.c: 92: TXSTAbits.TX9 = 0b0;
  1091  0002EC  9CAC               	bcf	4012,6,c	;volatile
  1092                           
  1093                           ;main.c: 93: TXSTAbits.TXEN = 0b1;
  1094  0002EE  8AAC               	bsf	4012,5,c	;volatile
  1095                           
  1096                           ;main.c: 95: TRISCbits.TRISC6 = 0b0;
  1097  0002F0  9C94               	bcf	3988,6,c	;volatile
  1098                           
  1099                           ;main.c: 96: TRISCbits.TRISC7 = 0b1;
  1100  0002F2  8E94               	bsf	3988,7,c	;volatile
  1101                           
  1102                           ;main.c: 98: _delay((unsigned long)((1000)*(2000000/4000.0)));
  1103  0002F4  0E03               	movlw	3
  1104  0002F6  0100               	movlb	0	; () banked
  1105  0002F8  6F61               	movwf	(??_UART_Init+1)& (0+255),b
  1106  0002FA  0E8A               	movlw	138
  1107  0002FC  6F60               	movwf	??_UART_Init& (0+255),b
  1108  0002FE  0E55               	movlw	85
  1109  000300                     u97:
  1110  000300  2EE8               	decfsz	wreg,f,c
  1111  000302  D7FE               	bra	u97
  1112  000304  2F60               	decfsz	??_UART_Init& (0+255),f,b
  1113  000306  D7FC               	bra	u97
  1114  000308  2F61               	decfsz	(??_UART_Init+1)& (0+255),f,b
  1115  00030A  D7FA               	bra	u97
  1116  00030C  D000               	nop2	
  1117  00030E  0012               	return	
  1118  000310                     __end_of_UART_Init:
  1119                           	opt stack 0
  1120                           tblptru	equ	0xFF8
  1121                           tblptrh	equ	0xFF7
  1122                           tblptrl	equ	0xFF6
  1123                           tablat	equ	0xFF5
  1124                           postinc0	equ	0xFEE
  1125                           wreg	equ	0xFE8
  1126                           postdec1	equ	0xFE5
  1127                           fsr1l	equ	0xFE1
  1128                           status	equ	0xFD8
  1129                           
  1130 ;; *************** function _InitApp *****************
  1131 ;; Defined at:
  1132 ;;		line 22 in file "user.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;		None
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, status,2
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1146 ;;      Params:         0       0       0       0
  1147 ;;      Locals:         0       0       0       0
  1148 ;;      Temps:          0       0       0       0
  1149 ;;      Totals:         0       0       0       0
  1150 ;;Total ram usage:        0 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    2
  1153 ;; This function calls:
  1154 ;;		Nothing
  1155 ;; This function is called by:
  1156 ;;		_main
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text5
  1161  000362                     __ptext5:
  1162                           	opt stack 0
  1163  000362                     _InitApp:
  1164                           	opt stack 28
  1165                           
  1166                           ;user.c: 24: OSCTUNEbits.INTSRC = 0b0;
  1167                           
  1168                           ;incstack = 0
  1169  000362  9E9B               	bcf	3995,7,c	;volatile
  1170                           
  1171                           ;user.c: 25: OSCTUNEbits.PLLEN = 0b0;
  1172  000364  9C9B               	bcf	3995,6,c	;volatile
  1173                           
  1174                           ;user.c: 26: OSCTUNEbits.TUN = 0b00000;
  1175  000366  909B               	bcf	3995,0,c	;volatile
  1176  000368  929B               	bcf	3995,1,c	;volatile
  1177  00036A  949B               	bcf	3995,2,c	;volatile
  1178  00036C  969B               	bcf	3995,3,c	;volatile
  1179  00036E  989B               	bcf	3995,4,c	;volatile
  1180                           
  1181                           ;user.c: 27: OSCCONbits.IDLEN = 0b0;
  1182  000370  9ED3               	bcf	4051,7,c	;volatile
  1183                           
  1184                           ;user.c: 28: OSCCONbits.IRCF = 0b101;
  1185  000372  50D3               	movf	4051,w,c	;volatile
  1186  000374  0B8F               	andlw	-113
  1187  000376  0950               	iorlw	80
  1188  000378  6ED3               	movwf	4051,c	;volatile
  1189                           
  1190                           ;user.c: 29: OSCCONbits.SCS = 0b10;
  1191  00037A  50D3               	movf	4051,w,c	;volatile
  1192  00037C  0BFC               	andlw	-4
  1193  00037E  0902               	iorlw	2
  1194  000380  6ED3               	movwf	4051,c	;volatile
  1195  000382  0012               	return		;funcret
  1196  000384                     __end_of_InitApp:
  1197                           	opt stack 0
  1198                           tblptru	equ	0xFF8
  1199                           tblptrh	equ	0xFF7
  1200                           tblptrl	equ	0xFF6
  1201                           tablat	equ	0xFF5
  1202                           postinc0	equ	0xFEE
  1203                           wreg	equ	0xFE8
  1204                           postdec1	equ	0xFE5
  1205                           fsr1l	equ	0xFE1
  1206                           status	equ	0xFD8
  1207                           
  1208 ;; *************** function _ConfigureOscillator *****************
  1209 ;; Defined at:
  1210 ;;		line 24 in file "system.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;		None
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;		None
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		None
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1224 ;;      Params:         0       0       0       0
  1225 ;;      Locals:         0       0       0       0
  1226 ;;      Temps:          0       0       0       0
  1227 ;;      Totals:         0       0       0       0
  1228 ;;Total ram usage:        0 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; Hardware stack levels required when called:    2
  1231 ;; This function calls:
  1232 ;;		Nothing
  1233 ;; This function is called by:
  1234 ;;		_main
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           	psect	text6
  1239  000392                     __ptext6:
  1240                           	opt stack 0
  1241  000392                     _ConfigureOscillator:
  1242                           	opt stack 28
  1243                           
  1244                           ;incstack = 0
  1245  000392  0012               	return		;funcret
  1246  000394                     __end_of_ConfigureOscillator:
  1247                           	opt stack 0
  1248                           tblptru	equ	0xFF8
  1249                           tblptrh	equ	0xFF7
  1250                           tblptrl	equ	0xFF6
  1251                           tablat	equ	0xFF5
  1252                           postinc0	equ	0xFEE
  1253                           wreg	equ	0xFE8
  1254                           postdec1	equ	0xFE5
  1255                           fsr1l	equ	0xFE1
  1256                           status	equ	0xFD8
  1257                           
  1258 ;; *************** function _low_isr *****************
  1259 ;; Defined at:
  1260 ;;		line 67 in file "interrupts.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;		None
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;		None
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  1    wreg      void 
  1267 ;; Registers used:
  1268 ;;		None
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1274 ;;      Params:         0       0       0       0
  1275 ;;      Locals:         0       0       0       0
  1276 ;;      Temps:         21       0       0       0
  1277 ;;      Totals:        21       0       0       0
  1278 ;;Total ram usage:       21 bytes
  1279 ;; Hardware stack levels used:    1
  1280 ;; Hardware stack levels required when called:    1
  1281 ;; This function calls:
  1282 ;;		Nothing
  1283 ;; This function is called by:
  1284 ;;		Interrupt level 1
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           	psect	intcodelo
  1289  000018                     __pintcodelo:
  1290                           	opt stack 0
  1291  000018                     _low_isr:
  1292                           	opt stack 27
  1293                           
  1294                           ;incstack = 0
  1295  000018  804C               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  1296  00001A  CFD8 F013          	movff	status,??_low_isr
  1297  00001E  CFE8 F014          	movff	wreg,??_low_isr+1
  1298  000022  CFE0 F015          	movff	bsr,??_low_isr+2
  1299  000026  CFFA F016          	movff	pclath,??_low_isr+3
  1300  00002A  CFFB F017          	movff	pclatu,??_low_isr+4
  1301  00002E  CFE9 F018          	movff	fsr0l,??_low_isr+5
  1302  000032  CFEA F019          	movff	fsr0h,??_low_isr+6
  1303  000036  CFE1 F01A          	movff	fsr1l,??_low_isr+7
  1304  00003A  CFE2 F01B          	movff	fsr1h,??_low_isr+8
  1305  00003E  CFD9 F01C          	movff	fsr2l,??_low_isr+9
  1306  000042  CFDA F01D          	movff	fsr2h,??_low_isr+10
  1307  000046  CFF3 F01E          	movff	prodl,??_low_isr+11
  1308  00004A  CFF4 F01F          	movff	prodh,??_low_isr+12
  1309  00004E  CFF6 F020          	movff	tblptrl,??_low_isr+13
  1310  000052  CFF7 F021          	movff	tblptrh,??_low_isr+14
  1311  000056  CFF8 F022          	movff	tblptru,??_low_isr+15
  1312  00005A  CFF5 F023          	movff	tablat,??_low_isr+16
  1313  00005E  C04C  F024         	movff	btemp,??_low_isr+17
  1314  000062  C04D  F025         	movff	btemp+1,??_low_isr+18
  1315  000066  C04E  F026         	movff	btemp+2,??_low_isr+19
  1316  00006A  C04F  F027         	movff	btemp+3,??_low_isr+20
  1317  00006E  C027  F04F         	movff	??_low_isr+20,btemp+3
  1318  000072  C026  F04E         	movff	??_low_isr+19,btemp+2
  1319  000076  C025  F04D         	movff	??_low_isr+18,btemp+1
  1320  00007A  C024  F04C         	movff	??_low_isr+17,btemp
  1321  00007E  C023  FFF5         	movff	??_low_isr+16,tablat
  1322  000082  C022  FFF8         	movff	??_low_isr+15,tblptru
  1323  000086  C021  FFF7         	movff	??_low_isr+14,tblptrh
  1324  00008A  C020  FFF6         	movff	??_low_isr+13,tblptrl
  1325  00008E  C01F  FFF4         	movff	??_low_isr+12,prodh
  1326  000092  C01E  FFF3         	movff	??_low_isr+11,prodl
  1327  000096  C01D  FFDA         	movff	??_low_isr+10,fsr2h
  1328  00009A  C01C  FFD9         	movff	??_low_isr+9,fsr2l
  1329  00009E  C01B  FFE2         	movff	??_low_isr+8,fsr1h
  1330  0000A2  C01A  FFE1         	movff	??_low_isr+7,fsr1l
  1331  0000A6  C019  FFEA         	movff	??_low_isr+6,fsr0h
  1332  0000AA  C018  FFE9         	movff	??_low_isr+5,fsr0l
  1333  0000AE  C017  FFFB         	movff	??_low_isr+4,pclatu
  1334  0000B2  C016  FFFA         	movff	??_low_isr+3,pclath
  1335  0000B6  C015  FFE0         	movff	??_low_isr+2,bsr
  1336  0000BA  C014  FFE8         	movff	??_low_isr+1,wreg
  1337  0000BE  C013  FFD8         	movff	??_low_isr,status
  1338  0000C2  904C               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  1339  0000C4  0010               	retfie	
  1340  0000C6                     __end_of_low_isr:
  1341                           	opt stack 0
  1342                           pclatu	equ	0xFFB
  1343                           pclath	equ	0xFFA
  1344                           tblptru	equ	0xFF8
  1345                           tblptrh	equ	0xFF7
  1346                           tblptrl	equ	0xFF6
  1347                           tablat	equ	0xFF5
  1348                           prodh	equ	0xFF4
  1349                           prodl	equ	0xFF3
  1350                           postinc0	equ	0xFEE
  1351                           fsr0h	equ	0xFEA
  1352                           fsr0l	equ	0xFE9
  1353                           wreg	equ	0xFE8
  1354                           postdec1	equ	0xFE5
  1355                           fsr1h	equ	0xFE2
  1356                           fsr1l	equ	0xFE1
  1357                           bsr	equ	0xFE0
  1358                           fsr2h	equ	0xFDA
  1359                           fsr2l	equ	0xFD9
  1360                           status	equ	0xFD8
  1361                           
  1362 ;; *************** function _high_isr *****************
  1363 ;; Defined at:
  1364 ;;		line 27 in file "interrupts.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;		None
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;		None
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1    wreg      void 
  1371 ;; Registers used:
  1372 ;;		None
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1378 ;;      Params:         0       0       0       0
  1379 ;;      Locals:         0       0       0       0
  1380 ;;      Temps:         18       0       0       0
  1381 ;;      Totals:        18       0       0       0
  1382 ;;Total ram usage:       18 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; This function calls:
  1385 ;;		Nothing
  1386 ;; This function is called by:
  1387 ;;		Interrupt level 2
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           	psect	intcode
  1392  000008                     __pintcode:
  1393                           	opt stack 0
  1394  000008                     _high_isr:
  1395                           	opt stack 27
  1396                           
  1397                           ;incstack = 0
  1398  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1399  00000A  EDD8  F000         	call	int_func,f	;refresh shadow registers
  1400                           pclatu	equ	0xFFB
  1401                           pclath	equ	0xFFA
  1402                           tblptru	equ	0xFF8
  1403                           tblptrh	equ	0xFF7
  1404                           tblptrl	equ	0xFF6
  1405                           tablat	equ	0xFF5
  1406                           prodh	equ	0xFF4
  1407                           prodl	equ	0xFF3
  1408                           postinc0	equ	0xFEE
  1409                           fsr0h	equ	0xFEA
  1410                           fsr0l	equ	0xFE9
  1411                           wreg	equ	0xFE8
  1412                           postdec1	equ	0xFE5
  1413                           fsr1h	equ	0xFE2
  1414                           fsr1l	equ	0xFE1
  1415                           bsr	equ	0xFE0
  1416                           fsr2h	equ	0xFDA
  1417                           fsr2l	equ	0xFD9
  1418                           status	equ	0xFD8
  1419                           
  1420                           	psect	intcode_body
  1421  0001B0                     __pintcode_body:
  1422                           	opt stack 27
  1423  0001B0                     int_func:
  1424                           	opt stack 27
  1425  0001B0  0006               	pop		; remove dummy address from shadow register refresh
  1426  0001B2  CFFA F001          	movff	pclath,??_high_isr
  1427  0001B6  CFFB F002          	movff	pclatu,??_high_isr+1
  1428  0001BA  CFE9 F003          	movff	fsr0l,??_high_isr+2
  1429  0001BE  CFEA F004          	movff	fsr0h,??_high_isr+3
  1430  0001C2  CFE1 F005          	movff	fsr1l,??_high_isr+4
  1431  0001C6  CFE2 F006          	movff	fsr1h,??_high_isr+5
  1432  0001CA  CFD9 F007          	movff	fsr2l,??_high_isr+6
  1433  0001CE  CFDA F008          	movff	fsr2h,??_high_isr+7
  1434  0001D2  CFF3 F009          	movff	prodl,??_high_isr+8
  1435  0001D6  CFF4 F00A          	movff	prodh,??_high_isr+9
  1436  0001DA  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  1437  0001DE  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  1438  0001E2  CFF8 F00D          	movff	tblptru,??_high_isr+12
  1439  0001E6  CFF5 F00E          	movff	tablat,??_high_isr+13
  1440  0001EA  C04C  F00F         	movff	btemp,??_high_isr+14
  1441  0001EE  C04D  F010         	movff	btemp+1,??_high_isr+15
  1442  0001F2  C04E  F011         	movff	btemp+2,??_high_isr+16
  1443  0001F6  C04F  F012         	movff	btemp+3,??_high_isr+17
  1444  0001FA  C012  F04F         	movff	??_high_isr+17,btemp+3
  1445  0001FE  C011  F04E         	movff	??_high_isr+16,btemp+2
  1446  000202  C010  F04D         	movff	??_high_isr+15,btemp+1
  1447  000206  C00F  F04C         	movff	??_high_isr+14,btemp
  1448  00020A  C00E  FFF5         	movff	??_high_isr+13,tablat
  1449  00020E  C00D  FFF8         	movff	??_high_isr+12,tblptru
  1450  000212  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  1451  000216  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  1452  00021A  C00A  FFF4         	movff	??_high_isr+9,prodh
  1453  00021E  C009  FFF3         	movff	??_high_isr+8,prodl
  1454  000222  C008  FFDA         	movff	??_high_isr+7,fsr2h
  1455  000226  C007  FFD9         	movff	??_high_isr+6,fsr2l
  1456  00022A  C006  FFE2         	movff	??_high_isr+5,fsr1h
  1457  00022E  C005  FFE1         	movff	??_high_isr+4,fsr1l
  1458  000232  C004  FFEA         	movff	??_high_isr+3,fsr0h
  1459  000236  C003  FFE9         	movff	??_high_isr+2,fsr0l
  1460  00023A  C002  FFFB         	movff	??_high_isr+1,pclatu
  1461  00023E  C001  FFFA         	movff	??_high_isr,pclath
  1462  000242  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1463  000244  0011               	retfie		f
  1464  000246                     __end_of_high_isr:
  1465                           	opt stack 0
  1466                           pclatu	equ	0xFFB
  1467                           pclath	equ	0xFFA
  1468                           tblptru	equ	0xFF8
  1469                           tblptrh	equ	0xFF7
  1470                           tblptrl	equ	0xFF6
  1471                           tablat	equ	0xFF5
  1472                           prodh	equ	0xFF4
  1473                           prodl	equ	0xFF3
  1474                           postinc0	equ	0xFEE
  1475                           fsr0h	equ	0xFEA
  1476                           fsr0l	equ	0xFE9
  1477                           wreg	equ	0xFE8
  1478                           postdec1	equ	0xFE5
  1479                           fsr1h	equ	0xFE2
  1480                           fsr1l	equ	0xFE1
  1481                           bsr	equ	0xFE0
  1482                           fsr2h	equ	0xFDA
  1483                           fsr2l	equ	0xFD9
  1484                           status	equ	0xFD8
  1485                           pclatu	equ	0xFFB
  1486                           pclath	equ	0xFFA
  1487                           tblptru	equ	0xFF8
  1488                           tblptrh	equ	0xFF7
  1489                           tblptrl	equ	0xFF6
  1490                           tablat	equ	0xFF5
  1491                           prodh	equ	0xFF4
  1492                           prodl	equ	0xFF3
  1493                           postinc0	equ	0xFEE
  1494                           fsr0h	equ	0xFEA
  1495                           fsr0l	equ	0xFE9
  1496                           wreg	equ	0xFE8
  1497                           postdec1	equ	0xFE5
  1498                           fsr1h	equ	0xFE2
  1499                           fsr1l	equ	0xFE1
  1500                           bsr	equ	0xFE0
  1501                           fsr2h	equ	0xFDA
  1502                           fsr2l	equ	0xFD9
  1503                           status	equ	0xFD8
  1504                           
  1505                           	psect	rparam
  1506  0000                     pclatu	equ	0xFFB
  1507                           pclath	equ	0xFFA
  1508                           tblptru	equ	0xFF8
  1509                           tblptrh	equ	0xFF7
  1510                           tblptrl	equ	0xFF6
  1511                           tablat	equ	0xFF5
  1512                           prodh	equ	0xFF4
  1513                           prodl	equ	0xFF3
  1514                           postinc0	equ	0xFEE
  1515                           fsr0h	equ	0xFEA
  1516                           fsr0l	equ	0xFE9
  1517                           wreg	equ	0xFE8
  1518                           postdec1	equ	0xFE5
  1519                           fsr1h	equ	0xFE2
  1520                           fsr1l	equ	0xFE1
  1521                           bsr	equ	0xFE0
  1522                           fsr2h	equ	0xFDA
  1523                           fsr2l	equ	0xFD9
  1524                           status	equ	0xFD8
  1525                           
  1526                           	psect	temp
  1527  00004C                     btemp:
  1528                           	opt stack 0
  1529  00004C                     	ds	1
  1530  0000                     int$flags	set	btemp
  1531  0000                     wtemp6	set	btemp+1
  1532                           pclatu	equ	0xFFB
  1533                           pclath	equ	0xFFA
  1534                           tblptru	equ	0xFF8
  1535                           tblptrh	equ	0xFF7
  1536                           tblptrl	equ	0xFF6
  1537                           tablat	equ	0xFF5
  1538                           prodh	equ	0xFF4
  1539                           prodl	equ	0xFF3
  1540                           postinc0	equ	0xFEE
  1541                           fsr0h	equ	0xFEA
  1542                           fsr0l	equ	0xFE9
  1543                           wreg	equ	0xFE8
  1544                           postdec1	equ	0xFE5
  1545                           fsr1h	equ	0xFE2
  1546                           fsr1l	equ	0xFE1
  1547                           bsr	equ	0xFE0
  1548                           fsr2h	equ	0xFDA
  1549                           fsr2l	equ	0xFD9
  1550                           status	equ	0xFD8


Data Sizes:
    Strings     262
    Constant    0
    Data        36
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      75
    BANK0           160     15      15
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_18(CODE[15]), STR_17(CODE[15]), STR_16(CODE[15]), STR_15(CODE[15]), 
		 -> STR_14(CODE[15]), STR_13(CODE[15]), STR_12(CODE[15]), STR_11(CODE[15]), 
		 -> STR_10(CODE[15]), STR_9(CODE[15]), STR_8(CODE[14]), STR_7(CODE[14]), 
		 -> STR_6(CODE[14]), STR_5(CODE[14]), STR_4(CODE[14]), STR_3(CODE[14]), 
		 -> STR_2(CODE[14]), STR_1(CODE[14]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_18(CODE[15]), STR_17(CODE[15]), STR_16(CODE[15]), STR_15(CODE[15]), 
		 -> STR_14(CODE[15]), STR_13(CODE[15]), STR_12(CODE[15]), STR_11(CODE[15]), 
		 -> STR_10(CODE[15]), STR_9(CODE[15]), STR_8(CODE[14]), STR_7(CODE[14]), 
		 -> STR_6(CODE[14]), STR_5(CODE[14]), STR_4(CODE[14]), STR_3(CODE[14]), 
		 -> STR_2(CODE[14]), STR_1(CODE[14]), 

    UART_Write_String@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_18(CODE[15]), STR_17(CODE[15]), STR_16(CODE[15]), STR_15(CODE[15]), 
		 -> STR_14(CODE[15]), STR_13(CODE[15]), STR_12(CODE[15]), STR_11(CODE[15]), 
		 -> STR_10(CODE[15]), STR_9(CODE[15]), STR_8(CODE[14]), STR_7(CODE[14]), 
		 -> STR_6(CODE[14]), STR_5(CODE[14]), STR_4(CODE[14]), STR_3(CODE[14]), 
		 -> STR_2(CODE[14]), STR_1(CODE[14]), 

    SERVO26	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_18(CODE[15]), 

    SERVO25	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_17(CODE[15]), 

    SERVO24	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_16(CODE[15]), 

    SERVO22	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_15(CODE[15]), 

    SERVO21	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_14(CODE[15]), 

    SERVO20	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_13(CODE[15]), 

    SERVO18	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_12(CODE[15]), 

    SERVO17	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_11(CODE[15]), 

    SERVO16	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_10(CODE[15]), 

    SERVO10	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_9(CODE[15]), 

    SERVO9	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_8(CODE[14]), 

    SERVO8	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[14]), 

    SERVO6	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_6(CODE[14]), 

    SERVO5	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[14]), 

    SERVO4	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_4(CODE[14]), 

    SERVO2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[14]), 

    SERVO1	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), 

    SERVO0	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_UART_Write_String
    _UART_Write_String->_strlen

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2060
                _ConfigureOscillator
                            _InitApp
                          _UART_Init
                  _UART_Write_String
 ---------------------------------------------------------------------------------
 (1) _UART_Write_String                                    9     7      2    2060
                                              6 BANK0      9     7      2
                         _UART_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     220
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _low_isr                                             21    21      0       0
                                             18 COMRAM    21    21      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_isr                                            18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _UART_Init
   _UART_Write_String
     _UART_Write
     _strlen

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      F       F       4        9.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     27      4B       1       79.8%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5A       9        0.0%
DATA                 0      0      5A      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sun Oct 01 06:35:08 2017

                          l81 01AE                            l90 028C                            l91 0266  
                          u97 0300                            bsr 000FE0                   __CFG_BORV$3 000000  
  __size_of_UART_Write_String 0054                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                         l903 0388                           l657 02AA                           l658 02A4  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           wreg 000FE8  
                __CFG_IESO$ON 000000                  __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000  
                        STR_1 3FAB                          STR_2 3FF1                          STR_3 3FE3  
                        STR_4 3F9D                          STR_5 3FB9                          STR_6 3FD5  
                        STR_7 3F8F                          STR_8 3FC7                          STR_9 3F71  
                        _TRMT 007D61                          _main 00CA                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr2h 000FDA                          fsr0l 000FE9  
                        fsr1l 000FE1                          fsr2l 000FD9                          btemp 004C  
                        prodh 000FF4                          prodl 000FF3                          start 00C6  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000               __end_of_InitApp 0384  
                       ?_main 0001                         STR_10 3F53                         STR_11 3F26  
                       STR_12 3F62                         STR_13 3F17                         STR_14 3F35  
                       STR_15 3EF9                         STR_16 3F80                         STR_17 3F44  
                       STR_18 3F08                         _SPBRG 000FAF                         _TXREG 000FAD  
         _ConfigureOscillator 0392                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                   ?_UART_Write 0001            __size_of_UART_Init 0034  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000               __end_of_low_isr 00C6                         pclath 000FFA  
                       tablat 000FF5                         status 000FD8                         wtemp6 004D  
              __CFG_PBADEN$ON 000000          ?_ConfigureOscillator 0001               __initialization 0310  
                __end_of_main 01B0                        ??_main 006F                 __activetblptr 000002  
             __CFG_BBSIZ$1024 000000                        _SERVO0 004A                        _SERVO1 0048  
                      _SERVO2 0046                        _SERVO4 0044                        _SERVO5 0042  
                      _SERVO6 0040                        _SERVO8 003E                        _SERVO9 003C  
                      _SPBRGH 000FB0                     ??_InitApp 0060         ??_ConfigureOscillator 0060  
              __CFG_XINST$OFF 000000             __end_of_UART_Init 0310              __end_of_high_isr 0246  
         __size_of_UART_Write 000E                __CFG_STVREN$ON 000000                        _strlen 029A  
             __CFG_BOREN$BOHW 000000                  __pdataCOMRAM 0028                  __mediumconst 3EF8  
                   ??_low_isr 0013                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                    __accesstop 0060       __end_of__initialization 0330  
               ___rparam_used 000001                __pcstackCOMRAM 0001               __CFG_OSC$IRCIO7 000000  
UART_Write_String@arrayLength 006A                       ?_strlen 0060                  ??_UART_Write 0060  
                     _SERVO10 003A                       _SERVO20 0032                       _SERVO21 0030  
                     _SERVO22 002E                       _SERVO16 0038                       _SERVO24 002C  
                     _SERVO17 0036                       _SERVO25 002A                       _SERVO18 0034  
                     _SERVO26 0028                     ?_high_isr 0001                       _InitApp 0362  
                     __Hparam 0000                       __Lparam 0000            __end_of_UART_Write 0392  
                     __pcinit 0310                       __ramtop 0300                       __ptext0 00CA  
                     __ptext1 0246                       __ptext2 029A                       __ptext3 0384  
                     __ptext4 02DC                       __ptext5 0362                       __ptext6 0392  
             __size_of_strlen 0042                       _low_isr 0018                    ??_high_isr 0001  
              __pintcode_body 01B0          end_of_initialization 0330                 __Lmediumconst 3EF8  
                     int_func 01B0                     _RCSTAbits 000FAB                       postdec1 000FE5  
                     postinc0 000FEE                       strlen@s 0060                     _UART_Init 02DC  
              UART_Write@data 0060                     _TRISCbits 000F94   __end_of_ConfigureOscillator 0394  
                   _TXSTAbits 000FAC                   _BAUDCONbits 000FB8                    ?_UART_Init 0001  
               __pidataCOMRAM 033E                __end_of_strlen 02DC           start_initialization 0310  
            __CFG_LPT1OSC$OFF 000000                      ??_strlen 0062                 __pcstackBANK0 0060  
           __size_of_high_isr 023E                      ?_InitApp 0001                     __pintcode 0008  
               __pmediumconst 3EF8                   __pintcodelo 0018                   ??_UART_Init 0060  
                    ?_low_isr 0001              __CFG_WDTPS$32768 000000          UART_Write_String@str 0066  
                   copy_data0 0324              __size_of_InitApp 0022                      __Hrparam 0000  
                    __Lrparam 0000             _UART_Write_String 0246            ?_UART_Write_String 0066  
            __size_of_low_isr 00AE                      _high_isr 0008           ??_UART_Write_String 0068  
               __size_of_main 00E6  __size_of_ConfigureOscillator 0002                      int$flags 004C  
   __end_of_UART_Write_String 029A                   _OSCTUNEbits 000F9B                      intlevel1 0000  
                    intlevel2 0000                    _OSCCONbits 000FD3            UART_Write_String@a 006C  
          UART_Write_String@i 006D                      strlen@cp 0064                    _UART_Write 0384  
