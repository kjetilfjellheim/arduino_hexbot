

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Thu Sep 28 18:53:58 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F2480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16  0000                     
    17                           ; Version 1.44
    18                           ; Generated 14/09/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F2480 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           ; #config settings
    53                           
    54                           	psect	cinit
    55  000160                     __pcinit:
    56                           	opt stack 0
    57  000160                     start_initialization:
    58                           	opt stack 0
    59  000160                     __initialization:
    60                           	opt stack 0
    61  000160                     end_of_initialization:
    62                           	opt stack 0
    63  000160                     __end_of__initialization:
    64                           	opt stack 0
    65  000160  9028               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    66  000162  9228               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    67  000164  0100               	movlb	0
    68  000166  EFB5  F000         	goto	_main	;jump to C main() function
    69                           
    70                           	psect	cstackCOMRAM
    71  000001                     __pcstackCOMRAM:
    72                           	opt stack 0
    73  000001                     ??_high_isr:
    74  000001                     
    75                           ; 1 bytes @ 0x0
    76  000001                     	ds	18
    77  000013                     ??_low_isr:
    78                           
    79                           ; 1 bytes @ 0x12
    80  000013                     	ds	21
    81  000028                     
    82                           ; 1 bytes @ 0x27
    83 ;;
    84 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    85 ;;
    86 ;; *************** function _main *****************
    87 ;; Defined at:
    88 ;;		line 33 in file "main.c"
    89 ;; Parameters:    Size  Location     Type
    90 ;;		None
    91 ;; Auto vars:     Size  Location     Type
    92 ;;		None
    93 ;; Return value:  Size  Location     Type
    94 ;;                  1    wreg      void 
    95 ;; Registers used:
    96 ;;		cstack
    97 ;; Tracked objects:
    98 ;;		On entry : 0/0
    99 ;;		On exit  : 0/0
   100 ;;		Unchanged: 0/0
   101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   102 ;;      Params:         0       0       0       0
   103 ;;      Locals:         0       0       0       0
   104 ;;      Temps:          0       0       0       0
   105 ;;      Totals:         0       0       0       0
   106 ;;Total ram usage:        0 bytes
   107 ;; Hardware stack levels required when called:    3
   108 ;; This function calls:
   109 ;;		_ConfigureOscillator
   110 ;;		_InitApp
   111 ;; This function is called by:
   112 ;;		Startup code after reset
   113 ;; This function uses a non-reentrant model
   114 ;;
   115                           
   116                           	psect	text0
   117  00016A                     __ptext0:
   118                           	opt stack 0
   119  00016A                     _main:
   120                           	opt stack 28
   121                           
   122                           ;main.c: 36: ConfigureOscillator();
   123                           
   124                           ;incstack = 0
   125  00016A  ECBB  F000         	call	_ConfigureOscillator	;wreg free
   126                           
   127                           ;main.c: 39: InitApp();
   128  00016E  ECBA  F000         	call	_InitApp	;wreg free
   129  000172                     l19:
   130                           
   131                           ;main.c: 44: {
   132  000172  D7FF               	goto	l19
   133  000174                     __end_of_main:
   134                           	opt stack 0
   135                           
   136 ;; *************** function _InitApp *****************
   137 ;; Defined at:
   138 ;;		line 28 in file "user.c"
   139 ;; Parameters:    Size  Location     Type
   140 ;;		None
   141 ;; Auto vars:     Size  Location     Type
   142 ;;		None
   143 ;; Return value:  Size  Location     Type
   144 ;;                  1    wreg      void 
   145 ;; Registers used:
   146 ;;		None
   147 ;; Tracked objects:
   148 ;;		On entry : 0/0
   149 ;;		On exit  : 0/0
   150 ;;		Unchanged: 0/0
   151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   152 ;;      Params:         0       0       0       0
   153 ;;      Locals:         0       0       0       0
   154 ;;      Temps:          0       0       0       0
   155 ;;      Totals:         0       0       0       0
   156 ;;Total ram usage:        0 bytes
   157 ;; Hardware stack levels used:    1
   158 ;; Hardware stack levels required when called:    2
   159 ;; This function calls:
   160 ;;		Nothing
   161 ;; This function is called by:
   162 ;;		_main
   163 ;; This function uses a non-reentrant model
   164 ;;
   165                           
   166                           	psect	text1
   167  000174                     __ptext1:
   168                           	opt stack 0
   169  000174                     _InitApp:
   170                           	opt stack 28
   171                           
   172                           ;incstack = 0
   173  000174  0012               	return		;funcret
   174  000176                     __end_of_InitApp:
   175                           	opt stack 0
   176                           
   177 ;; *************** function _ConfigureOscillator *****************
   178 ;; Defined at:
   179 ;;		line 24 in file "system.c"
   180 ;; Parameters:    Size  Location     Type
   181 ;;		None
   182 ;; Auto vars:     Size  Location     Type
   183 ;;		None
   184 ;; Return value:  Size  Location     Type
   185 ;;                  1    wreg      void 
   186 ;; Registers used:
   187 ;;		None
   188 ;; Tracked objects:
   189 ;;		On entry : 0/0
   190 ;;		On exit  : 0/0
   191 ;;		Unchanged: 0/0
   192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   193 ;;      Params:         0       0       0       0
   194 ;;      Locals:         0       0       0       0
   195 ;;      Temps:          0       0       0       0
   196 ;;      Totals:         0       0       0       0
   197 ;;Total ram usage:        0 bytes
   198 ;; Hardware stack levels used:    1
   199 ;; Hardware stack levels required when called:    2
   200 ;; This function calls:
   201 ;;		Nothing
   202 ;; This function is called by:
   203 ;;		_main
   204 ;; This function uses a non-reentrant model
   205 ;;
   206                           
   207                           	psect	text2
   208  000176                     __ptext2:
   209                           	opt stack 0
   210  000176                     _ConfigureOscillator:
   211                           	opt stack 28
   212                           
   213                           ;incstack = 0
   214  000176  0012               	return		;funcret
   215  000178                     __end_of_ConfigureOscillator:
   216                           	opt stack 0
   217                           
   218 ;; *************** function _low_isr *****************
   219 ;; Defined at:
   220 ;;		line 67 in file "interrupts.c"
   221 ;; Parameters:    Size  Location     Type
   222 ;;		None
   223 ;; Auto vars:     Size  Location     Type
   224 ;;		None
   225 ;; Return value:  Size  Location     Type
   226 ;;                  1    wreg      void 
   227 ;; Registers used:
   228 ;;		None
   229 ;; Tracked objects:
   230 ;;		On entry : 0/0
   231 ;;		On exit  : 0/0
   232 ;;		Unchanged: 0/0
   233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   234 ;;      Params:         0       0       0       0
   235 ;;      Locals:         0       0       0       0
   236 ;;      Temps:         21       0       0       0
   237 ;;      Totals:        21       0       0       0
   238 ;;Total ram usage:       21 bytes
   239 ;; Hardware stack levels used:    1
   240 ;; Hardware stack levels required when called:    1
   241 ;; This function calls:
   242 ;;		Nothing
   243 ;; This function is called by:
   244 ;;		Interrupt level 1
   245 ;; This function uses a non-reentrant model
   246 ;;
   247                           
   248                           	psect	intcodelo
   249  000018                     __pintcodelo:
   250                           	opt stack 0
   251  000018                     _low_isr:
   252                           	opt stack 28
   253                           
   254                           ;incstack = 0
   255  000018  8028               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   256  00001A  CFD8 F013          	movff	status,??_low_isr
   257  00001E  CFE8 F014          	movff	wreg,??_low_isr+1
   258  000022  CFE0 F015          	movff	bsr,??_low_isr+2
   259  000026  CFFA F016          	movff	pclath,??_low_isr+3
   260  00002A  CFFB F017          	movff	pclatu,??_low_isr+4
   261  00002E  CFE9 F018          	movff	fsr0l,??_low_isr+5
   262  000032  CFEA F019          	movff	fsr0h,??_low_isr+6
   263  000036  CFE1 F01A          	movff	fsr1l,??_low_isr+7
   264  00003A  CFE2 F01B          	movff	fsr1h,??_low_isr+8
   265  00003E  CFD9 F01C          	movff	fsr2l,??_low_isr+9
   266  000042  CFDA F01D          	movff	fsr2h,??_low_isr+10
   267  000046  CFF3 F01E          	movff	prodl,??_low_isr+11
   268  00004A  CFF4 F01F          	movff	prodh,??_low_isr+12
   269  00004E  CFF6 F020          	movff	tblptrl,??_low_isr+13
   270  000052  CFF7 F021          	movff	tblptrh,??_low_isr+14
   271  000056  CFF8 F022          	movff	tblptru,??_low_isr+15
   272  00005A  CFF5 F023          	movff	tablat,??_low_isr+16
   273  00005E  C028  F024         	movff	btemp,??_low_isr+17
   274  000062  C029  F025         	movff	btemp+1,??_low_isr+18
   275  000066  C02A  F026         	movff	btemp+2,??_low_isr+19
   276  00006A  C02B  F027         	movff	btemp+3,??_low_isr+20
   277  00006E  C027  F02B         	movff	??_low_isr+20,btemp+3
   278  000072  C026  F02A         	movff	??_low_isr+19,btemp+2
   279  000076  C025  F029         	movff	??_low_isr+18,btemp+1
   280  00007A  C024  F028         	movff	??_low_isr+17,btemp
   281  00007E  C023  FFF5         	movff	??_low_isr+16,tablat
   282  000082  C022  FFF8         	movff	??_low_isr+15,tblptru
   283  000086  C021  FFF7         	movff	??_low_isr+14,tblptrh
   284  00008A  C020  FFF6         	movff	??_low_isr+13,tblptrl
   285  00008E  C01F  FFF4         	movff	??_low_isr+12,prodh
   286  000092  C01E  FFF3         	movff	??_low_isr+11,prodl
   287  000096  C01D  FFDA         	movff	??_low_isr+10,fsr2h
   288  00009A  C01C  FFD9         	movff	??_low_isr+9,fsr2l
   289  00009E  C01B  FFE2         	movff	??_low_isr+8,fsr1h
   290  0000A2  C01A  FFE1         	movff	??_low_isr+7,fsr1l
   291  0000A6  C019  FFEA         	movff	??_low_isr+6,fsr0h
   292  0000AA  C018  FFE9         	movff	??_low_isr+5,fsr0l
   293  0000AE  C017  FFFB         	movff	??_low_isr+4,pclatu
   294  0000B2  C016  FFFA         	movff	??_low_isr+3,pclath
   295  0000B6  C015  FFE0         	movff	??_low_isr+2,bsr
   296  0000BA  C014  FFE8         	movff	??_low_isr+1,wreg
   297  0000BE  C013  FFD8         	movff	??_low_isr,status
   298  0000C2  9028               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   299  0000C4  0010               	retfie	
   300  0000C6                     __end_of_low_isr:
   301                           	opt stack 0
   302                           pclatu	equ	0xFFB
   303                           pclath	equ	0xFFA
   304                           tblptru	equ	0xFF8
   305                           tblptrh	equ	0xFF7
   306                           tblptrl	equ	0xFF6
   307                           tablat	equ	0xFF5
   308                           prodh	equ	0xFF4
   309                           prodl	equ	0xFF3
   310                           fsr0h	equ	0xFEA
   311                           fsr0l	equ	0xFE9
   312                           wreg	equ	0xFE8
   313                           fsr1h	equ	0xFE2
   314                           fsr1l	equ	0xFE1
   315                           bsr	equ	0xFE0
   316                           fsr2h	equ	0xFDA
   317                           fsr2l	equ	0xFD9
   318                           status	equ	0xFD8
   319                           
   320 ;; *************** function _high_isr *****************
   321 ;; Defined at:
   322 ;;		line 27 in file "interrupts.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;		None
   325 ;; Auto vars:     Size  Location     Type
   326 ;;		None
   327 ;; Return value:  Size  Location     Type
   328 ;;                  1    wreg      void 
   329 ;; Registers used:
   330 ;;		None
   331 ;; Tracked objects:
   332 ;;		On entry : 0/0
   333 ;;		On exit  : 0/0
   334 ;;		Unchanged: 0/0
   335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   336 ;;      Params:         0       0       0       0
   337 ;;      Locals:         0       0       0       0
   338 ;;      Temps:         18       0       0       0
   339 ;;      Totals:        18       0       0       0
   340 ;;Total ram usage:       18 bytes
   341 ;; Hardware stack levels used:    1
   342 ;; This function calls:
   343 ;;		Nothing
   344 ;; This function is called by:
   345 ;;		Interrupt level 2
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349                           	psect	intcode
   350  000008                     __pintcode:
   351                           	opt stack 0
   352  000008                     _high_isr:
   353                           	opt stack 28
   354                           
   355                           ;incstack = 0
   356  000008  8228               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   357  00000A  ED65  F000         	call	int_func,f	;refresh shadow registers
   358                           pclatu	equ	0xFFB
   359                           pclath	equ	0xFFA
   360                           tblptru	equ	0xFF8
   361                           tblptrh	equ	0xFF7
   362                           tblptrl	equ	0xFF6
   363                           tablat	equ	0xFF5
   364                           prodh	equ	0xFF4
   365                           prodl	equ	0xFF3
   366                           fsr0h	equ	0xFEA
   367                           fsr0l	equ	0xFE9
   368                           wreg	equ	0xFE8
   369                           fsr1h	equ	0xFE2
   370                           fsr1l	equ	0xFE1
   371                           bsr	equ	0xFE0
   372                           fsr2h	equ	0xFDA
   373                           fsr2l	equ	0xFD9
   374                           status	equ	0xFD8
   375                           
   376                           	psect	intcode_body
   377  0000CA                     __pintcode_body:
   378                           	opt stack 28
   379  0000CA                     int_func:
   380                           	opt stack 28
   381  0000CA  0006               	pop		; remove dummy address from shadow register refresh
   382  0000CC  CFFA F001          	movff	pclath,??_high_isr
   383  0000D0  CFFB F002          	movff	pclatu,??_high_isr+1
   384  0000D4  CFE9 F003          	movff	fsr0l,??_high_isr+2
   385  0000D8  CFEA F004          	movff	fsr0h,??_high_isr+3
   386  0000DC  CFE1 F005          	movff	fsr1l,??_high_isr+4
   387  0000E0  CFE2 F006          	movff	fsr1h,??_high_isr+5
   388  0000E4  CFD9 F007          	movff	fsr2l,??_high_isr+6
   389  0000E8  CFDA F008          	movff	fsr2h,??_high_isr+7
   390  0000EC  CFF3 F009          	movff	prodl,??_high_isr+8
   391  0000F0  CFF4 F00A          	movff	prodh,??_high_isr+9
   392  0000F4  CFF6 F00B          	movff	tblptrl,??_high_isr+10
   393  0000F8  CFF7 F00C          	movff	tblptrh,??_high_isr+11
   394  0000FC  CFF8 F00D          	movff	tblptru,??_high_isr+12
   395  000100  CFF5 F00E          	movff	tablat,??_high_isr+13
   396  000104  C028  F00F         	movff	btemp,??_high_isr+14
   397  000108  C029  F010         	movff	btemp+1,??_high_isr+15
   398  00010C  C02A  F011         	movff	btemp+2,??_high_isr+16
   399  000110  C02B  F012         	movff	btemp+3,??_high_isr+17
   400  000114  C012  F02B         	movff	??_high_isr+17,btemp+3
   401  000118  C011  F02A         	movff	??_high_isr+16,btemp+2
   402  00011C  C010  F029         	movff	??_high_isr+15,btemp+1
   403  000120  C00F  F028         	movff	??_high_isr+14,btemp
   404  000124  C00E  FFF5         	movff	??_high_isr+13,tablat
   405  000128  C00D  FFF8         	movff	??_high_isr+12,tblptru
   406  00012C  C00C  FFF7         	movff	??_high_isr+11,tblptrh
   407  000130  C00B  FFF6         	movff	??_high_isr+10,tblptrl
   408  000134  C00A  FFF4         	movff	??_high_isr+9,prodh
   409  000138  C009  FFF3         	movff	??_high_isr+8,prodl
   410  00013C  C008  FFDA         	movff	??_high_isr+7,fsr2h
   411  000140  C007  FFD9         	movff	??_high_isr+6,fsr2l
   412  000144  C006  FFE2         	movff	??_high_isr+5,fsr1h
   413  000148  C005  FFE1         	movff	??_high_isr+4,fsr1l
   414  00014C  C004  FFEA         	movff	??_high_isr+3,fsr0h
   415  000150  C003  FFE9         	movff	??_high_isr+2,fsr0l
   416  000154  C002  FFFB         	movff	??_high_isr+1,pclatu
   417  000158  C001  FFFA         	movff	??_high_isr,pclath
   418  00015C  9228               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   419  00015E  0011               	retfie		f
   420  000160                     __end_of_high_isr:
   421                           	opt stack 0
   422  0000                     pclatu	equ	0xFFB
   423                           pclath	equ	0xFFA
   424                           tblptru	equ	0xFF8
   425                           tblptrh	equ	0xFF7
   426                           tblptrl	equ	0xFF6
   427                           tablat	equ	0xFF5
   428                           prodh	equ	0xFF4
   429                           prodl	equ	0xFF3
   430                           fsr0h	equ	0xFEA
   431                           fsr0l	equ	0xFE9
   432                           wreg	equ	0xFE8
   433                           fsr1h	equ	0xFE2
   434                           fsr1l	equ	0xFE1
   435                           bsr	equ	0xFE0
   436                           fsr2h	equ	0xFDA
   437                           fsr2l	equ	0xFD9
   438                           status	equ	0xFD8
   439                           pclatu	equ	0xFFB
   440                           pclath	equ	0xFFA
   441                           tblptru	equ	0xFF8
   442                           tblptrh	equ	0xFF7
   443                           tblptrl	equ	0xFF6
   444                           tablat	equ	0xFF5
   445                           prodh	equ	0xFF4
   446                           prodl	equ	0xFF3
   447                           fsr0h	equ	0xFEA
   448                           fsr0l	equ	0xFE9
   449                           wreg	equ	0xFE8
   450                           fsr1h	equ	0xFE2
   451                           fsr1l	equ	0xFE1
   452                           bsr	equ	0xFE0
   453                           fsr2h	equ	0xFDA
   454                           fsr2l	equ	0xFD9
   455                           status	equ	0xFD8
   456                           
   457                           	psect	rparam
   458  0000                     pclatu	equ	0xFFB
   459                           pclath	equ	0xFFA
   460                           tblptru	equ	0xFF8
   461                           tblptrh	equ	0xFF7
   462                           tblptrl	equ	0xFF6
   463                           tablat	equ	0xFF5
   464                           prodh	equ	0xFF4
   465                           prodl	equ	0xFF3
   466                           fsr0h	equ	0xFEA
   467                           fsr0l	equ	0xFE9
   468                           wreg	equ	0xFE8
   469                           fsr1h	equ	0xFE2
   470                           fsr1l	equ	0xFE1
   471                           bsr	equ	0xFE0
   472                           fsr2h	equ	0xFDA
   473                           fsr2l	equ	0xFD9
   474                           status	equ	0xFD8
   475                           
   476                           	psect	temp
   477  000028                     btemp:
   478                           	opt stack 0
   479  000028                     	ds	1
   480  0000                     int$flags	set	btemp
   481  0000                     wtemp6	set	btemp+1
   482                           pclatu	equ	0xFFB
   483                           pclath	equ	0xFFA
   484                           tblptru	equ	0xFF8
   485                           tblptrh	equ	0xFF7
   486                           tblptrl	equ	0xFF6
   487                           tablat	equ	0xFF5
   488                           prodh	equ	0xFF4
   489                           prodl	equ	0xFF3
   490                           fsr0h	equ	0xFEA
   491                           fsr0l	equ	0xFE9
   492                           wreg	equ	0xFE8
   493                           fsr1h	equ	0xFE2
   494                           fsr1l	equ	0xFE1
   495                           bsr	equ	0xFE0
   496                           fsr2h	equ	0xFDA
   497                           fsr2l	equ	0xFD9
   498                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      39
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                _ConfigureOscillator
                            _InitApp
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                             21    21      0       0
                                             18 COMRAM    21    21      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                            18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     27      27       1       41.5%
STACK                0      0       0       2        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
ABS                  0      0       0       9        0.0%
BIGRAM             2FF      0       0      10        0.0%
DATA                 0      0       0      11        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Thu Sep 28 18:53:58 2017

                          l19 0172                            bsr 000FE0                           wreg 000FE8  
                        _main 016A                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr2h 000FDA                          fsr0l 000FE9                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 0028                          prodh 000FF4  
                        prodl 000FF3                          start 00C6                  ___param_bank 000000  
             __end_of_InitApp 0176                         ?_main 0001           _ConfigureOscillator 0176  
             __end_of_low_isr 00C6                         pclath 000FFA                         tablat 000FF5  
                       status 000FD8                         wtemp6 0029          ?_ConfigureOscillator 0001  
             __initialization 0160                  __end_of_main 0174                        ??_main 0028  
               __activetblptr 000000                     ??_InitApp 0028         ??_ConfigureOscillator 0028  
            __end_of_high_isr 0160                     ??_low_isr 0013                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                    __accesstop 0060  
     __end_of__initialization 0160                 ___rparam_used 000001                __pcstackCOMRAM 0001  
                   ?_high_isr 0001                       _InitApp 0174                       __Hparam 0000  
                     __Lparam 0000                       __pcinit 0160                       __ramtop 0300  
                     __ptext0 016A                       __ptext1 0174                       __ptext2 0176  
                     _low_isr 0018                    ??_high_isr 0001                __pintcode_body 00CA  
        end_of_initialization 0160                       int_func 00CA   __end_of_ConfigureOscillator 0178  
         start_initialization 0160             __size_of_high_isr 0158                      ?_InitApp 0001  
                   __pintcode 0008                   __pintcodelo 0018                      ?_low_isr 0001  
            __size_of_InitApp 0002                      __Hrparam 0000                      __Lrparam 0000  
            __size_of_low_isr 00AE                      _high_isr 0008                 __size_of_main 000A  
__size_of_ConfigureOscillator 0002                      int$flags 0028                      intlevel1 0000  
                    intlevel2 0000  
