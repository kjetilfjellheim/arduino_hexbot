

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Oct 03 02:30:09 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F2480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24  0000                     
    25                           ; Version 1.44
    26                           ; Generated 14/09/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F2480 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	smallconst
    61  000300                     __psmallconst:
    62                           	opt stack 0
    63  000300  00                 	db	0
    64  000301                     _servosets:
    65                           	opt stack 0
    66  000301  0001               	dw	1
    67  000303  30                 	db	48
    68  000304  00                 	db	0
    69  000305  31                 	db	49
    70  000306  00                 	db	0
    71  000307  32                 	db	50
    72  000308  00                 	db	0
    73  000309  05DC               	dw	1500
    74  00030B  0514               	dw	1300
    75  00030D  0708               	dw	1800
    76  00030F  0000               	dw	0
    77  000311  0000               	dw	0
    78  000313  0000               	dw	0
    79  000315  0002               	dw	2
    80  000317  34                 	db	52
    81  000318  00                 	db	0
    82  000319  35                 	db	53
    83  00031A  00                 	db	0
    84  00031B  36                 	db	54
    85  00031C  00                 	db	0
    86  00031D  0578               	dw	1400
    87  00031F  0640               	dw	1600
    88  000321  06A4               	dw	1700
    89  000323  0000               	dw	0
    90  000325  0000               	dw	0
    91  000327  0000               	dw	0
    92  000329  0003               	dw	3
    93  00032B  38                 	db	56
    94  00032C  00                 	db	0
    95  00032D  39                 	db	57
    96  00032E  00                 	db	0
    97  00032F  31                 	db	49
    98  000330  30                 	db	48
    99  000331  03E8               	dw	1000
   100  000333  0640               	dw	1600
   101  000335  0708               	dw	1800
   102  000337  0000               	dw	0
   103  000339  0000               	dw	0
   104  00033B  0000               	dw	0
   105  00033D  0004               	dw	4
   106  00033F  31                 	db	49
   107  000340  36                 	db	54
   108  000341  31                 	db	49
   109  000342  37                 	db	55
   110  000343  31                 	db	49
   111  000344  38                 	db	56
   112  000345  0578               	dw	1400
   113  000347  04B0               	dw	1200
   114  000349  05DC               	dw	1500
   115  00034B  0000               	dw	0
   116  00034D  0000               	dw	0
   117  00034F  0000               	dw	0
   118  000351  0005               	dw	5
   119  000353  32                 	db	50
   120  000354  30                 	db	48
   121  000355  32                 	db	50
   122  000356  31                 	db	49
   123  000357  32                 	db	50
   124  000358  32                 	db	50
   125  000359  07D0               	dw	2000
   126  00035B  0514               	dw	1300
   127  00035D  03E8               	dw	1000
   128  00035F  0000               	dw	0
   129  000361  0000               	dw	0
   130  000363  0000               	dw	0
   131  000365  0006               	dw	6
   132  000367  32                 	db	50
   133  000368  34                 	db	52
   134  000369  32                 	db	50
   135  00036A  35                 	db	53
   136  00036B  32                 	db	50
   137  00036C  36                 	db	54
   138  00036D  076C               	dw	1900
   139  00036F  0578               	dw	1400
   140  000371  03E8               	dw	1000
   141  000373  0000               	dw	0
   142  000375  0000               	dw	0
   143  000377  0000               	dw	0
   144  000379                     __end_of_servosets:
   145                           	opt stack 0
   146  000379                     _SERVOSETS:
   147                           	opt stack 0
   148  000379  0006               	dw	6
   149  00037B                     __end_of_SERVOSETS:
   150                           	opt stack 0
   151  00037B                     _MAX_MOVEMENT_STRING_LENGTH:
   152                           	opt stack 0
   153  00037B  0100               	dw	256
   154  00037D                     __end_of_MAX_MOVEMENT_STRING_LENGTH:
   155                           	opt stack 0
   156  0000                     _OSCCONbits	set	4051
   157  0000                     _OSCTUNEbits	set	3995
   158  0000                     _TXREG	set	4013
   159  0000                     _TRISCbits	set	3988
   160  0000                     _RCSTAbits	set	4011
   161  0000                     _SPBRGH	set	4016
   162  0000                     _SPBRG	set	4015
   163  0000                     _TXSTAbits	set	4012
   164  0000                     _BAUDCONbits	set	4024
   165  0000                     _TRMT	set	32097
   166                           
   167                           ; #config settings
   168  00037D  00                 	db	0	; dummy byte at the end
   169  0000                     
   170                           	psect	cinit
   171  000512                     __pcinit:
   172                           	opt stack 0
   173  000512                     start_initialization:
   174                           	opt stack 0
   175  000512                     __initialization:
   176                           	opt stack 0
   177                           
   178                           ; Clear objects allocated to BIGRAM (512 bytes)
   179  000512  EE01  F000         	lfsr	0,__pbssBIGRAM
   180  000516  EE12 F000          	lfsr	1,512
   181  00051A                     clear_0:
   182  00051A  6AEE               	clrf	postinc0,c
   183  00051C  50E5               	movf	postdec1,w,c
   184  00051E  50E1               	movf	fsr1l,w,c
   185  000520  E1FC               	bnz	clear_0
   186  000522  50E2               	movf	fsr1h,w,c
   187  000524  E1FA               	bnz	clear_0
   188  000526                     end_of_initialization:
   189                           	opt stack 0
   190  000526                     __end_of__initialization:
   191                           	opt stack 0
   192  000526  9036               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   193  000528  9236               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   194  00052A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   195  00052C  6EF8               	movwf	tblptru,c
   196  00052E  0E03               	movlw	high __Lsmallconst
   197  000530  6EF7               	movwf	tblptrh,c
   198  000532  0100               	movlb	0
   199  000534  EF43  F002         	goto	_main	;jump to C main() function
   200                           tblptru	equ	0xFF8
   201                           tblptrh	equ	0xFF7
   202                           postinc0	equ	0xFEE
   203                           postdec1	equ	0xFE5
   204                           fsr1h	equ	0xFE2
   205                           fsr1l	equ	0xFE1
   206                           
   207                           	psect	bssBIGRAM
   208  000100                     __pbssBIGRAM:
   209                           	opt stack 0
   210  000100                     _movementString:
   211                           	opt stack 0
   212  000100                     	ds	512
   213                           tblptru	equ	0xFF8
   214                           tblptrh	equ	0xFF7
   215                           postinc0	equ	0xFEE
   216                           postdec1	equ	0xFE5
   217                           fsr1h	equ	0xFE2
   218                           fsr1l	equ	0xFE1
   219                           
   220                           	psect	cstackCOMRAM
   221  000001                     __pcstackCOMRAM:
   222                           	opt stack 0
   223  000001                     ??_high_isr:
   224  000001                     
   225                           ; 1 bytes @ 0x0
   226  000001                     	ds	18
   227  000013                     ??_low_isr:
   228                           
   229                           ; 1 bytes @ 0x12
   230  000013                     	ds	21
   231  000028                     ??_UART_Init:
   232  000028                     ?_strlen:
   233                           	opt stack 0
   234  000028                     strlen@s:
   235                           	opt stack 0
   236                           
   237                           ; 2 bytes @ 0x27
   238  000028                     	ds	2
   239  00002A                     ??_strlen:
   240                           
   241                           ; 1 bytes @ 0x29
   242  00002A                     	ds	2
   243  00002C                     strlen@cp:
   244                           	opt stack 0
   245                           
   246                           ; 2 bytes @ 0x2B
   247  00002C                     	ds	2
   248  00002E                     EmptyMovementString@movementString:
   249                           	opt stack 0
   250                           
   251                           ; 2 bytes @ 0x2D
   252  00002E                     	ds	2
   253  000030                     EmptyMovementString@i:
   254                           	opt stack 0
   255                           
   256                           ; 2 bytes @ 0x2F
   257  000030                     	ds	2
   258  000032                     MoveInitPosition@i:
   259                           	opt stack 0
   260                           
   261                           ; 2 bytes @ 0x31
   262  000032                     	ds	2
   263  000034                     ??_main:
   264                           
   265                           ; 1 bytes @ 0x33
   266  000034                     	ds	2
   267                           tblptru	equ	0xFF8
   268                           tblptrh	equ	0xFF7
   269                           postinc0	equ	0xFEE
   270                           postdec1	equ	0xFE5
   271                           fsr1h	equ	0xFE2
   272                           fsr1l	equ	0xFE1
   273                           
   274 ;;
   275 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   276 ;;
   277 ;; *************** function _main *****************
   278 ;; Defined at:
   279 ;;		line 131 in file "main.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;		None
   284 ;; Return value:  Size  Location     Type
   285 ;;                  1    wreg      void 
   286 ;; Registers used:
   287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   288 ;; Tracked objects:
   289 ;;		On entry : 0/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   293 ;;      Params:         0       0       0       0
   294 ;;      Locals:         0       0       0       0
   295 ;;      Temps:          2       0       0       0
   296 ;;      Totals:         2       0       0       0
   297 ;;Total ram usage:        2 bytes
   298 ;; Hardware stack levels required when called:    5
   299 ;; This function calls:
   300 ;;		_ConfigureOscillator
   301 ;;		_InitApp
   302 ;;		_Move2462Positions
   303 ;;		_MoveInitPosition
   304 ;;		_MoveNextPosition
   305 ;;		_UART_Init
   306 ;; This function is called by:
   307 ;;		Startup code after reset
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           	psect	text0
   312  000486                     __ptext0:
   313                           	opt stack 0
   314  000486                     _main:
   315                           	opt stack 26
   316                           
   317                           ;main.c: 136: ConfigureOscillator();
   318                           
   319                           ;incstack = 0
   320  000486  EC9C  F002         	call	_ConfigureOscillator	;wreg free
   321                           
   322                           ;main.c: 141: InitApp();
   323  00048A  ECB7  F002         	call	_InitApp	;wreg free
   324                           
   325                           ;main.c: 146: UART_Init();
   326  00048E  EC5B  F002         	call	_UART_Init	;wreg free
   327                           
   328                           ;main.c: 151: MoveInitPosition();
   329  000492  EC72  F002         	call	_MoveInitPosition	;wreg free
   330                           
   331                           ;main.c: 156: Move2462Positions();
   332  000496  ECB0  F002         	call	_Move2462Positions	;wreg free
   333  00049A                     
   334                           ;main.c: 165: MoveNextPosition();
   335  00049A  ECA9  F002         	call	_MoveNextPosition	;wreg free
   336                           
   337                           ;main.c: 166: _delay((unsigned long)((1000)*(2000000/4000.0)));
   338  00049E  0E03               	movlw	3
   339  0004A0  6E35               	movwf	(??_main+1)& (0+255),c
   340  0004A2  0E8A               	movlw	138
   341  0004A4  6E34               	movwf	??_main& (0+255),c
   342  0004A6  0E56               	movlw	86
   343  0004A8                     u147:
   344  0004A8  2EE8               	decfsz	wreg,f,c
   345  0004AA  D7FE               	bra	u147
   346  0004AC  2E34               	decfsz	??_main& (0+255),f,c
   347  0004AE  D7FC               	bra	u147
   348  0004B0  2E35               	decfsz	(??_main+1)& (0+255),f,c
   349  0004B2  D7FA               	bra	u147
   350  0004B4  D7F2               	goto	l59
   351  0004B6                     __end_of_main:
   352                           	opt stack 0
   353                           tblptru	equ	0xFF8
   354                           tblptrh	equ	0xFF7
   355                           postinc0	equ	0xFEE
   356                           wreg	equ	0xFE8
   357                           postdec1	equ	0xFE5
   358                           fsr1h	equ	0xFE2
   359                           fsr1l	equ	0xFE1
   360                           
   361 ;; *************** function _UART_Init *****************
   362 ;; Defined at:
   363 ;;		line 171 in file "main.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;		None
   366 ;; Auto vars:     Size  Location     Type
   367 ;;		None
   368 ;; Return value:  Size  Location     Type
   369 ;;                  1    wreg      unsigned char 
   370 ;; Registers used:
   371 ;;		wreg, status,2
   372 ;; Tracked objects:
   373 ;;		On entry : 0/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   377 ;;      Params:         0       0       0       0
   378 ;;      Locals:         0       0       0       0
   379 ;;      Temps:          2       0       0       0
   380 ;;      Totals:         2       0       0       0
   381 ;;Total ram usage:        2 bytes
   382 ;; Hardware stack levels used:    1
   383 ;; Hardware stack levels required when called:    2
   384 ;; This function calls:
   385 ;;		Nothing
   386 ;; This function is called by:
   387 ;;		_main
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           	psect	text1
   392  0004B6                     __ptext1:
   393                           	opt stack 0
   394  0004B6                     _UART_Init:
   395                           	opt stack 28
   396                           
   397                           ;main.c: 172: BAUDCONbits.BRG16 = 0b1;
   398                           
   399                           ;incstack = 0
   400  0004B6  86B8               	bsf	4024,3,c	;volatile
   401                           
   402                           ;main.c: 173: TXSTAbits.BRGH = 0b1;
   403  0004B8  84AC               	bsf	4012,2,c	;volatile
   404                           
   405                           ;main.c: 174: SPBRG = 51;
   406  0004BA  0E33               	movlw	51
   407  0004BC  6EAF               	movwf	4015,c	;volatile
   408                           
   409                           ;main.c: 175: SPBRGH = 0;
   410  0004BE  0E00               	movlw	0
   411  0004C0  6EB0               	movwf	4016,c	;volatile
   412                           
   413                           ;main.c: 176: TXSTAbits.SYNC = 0b0;
   414  0004C2  98AC               	bcf	4012,4,c	;volatile
   415                           
   416                           ;main.c: 177: RCSTAbits.SPEN = 0b1;
   417  0004C4  8EAB               	bsf	4011,7,c	;volatile
   418                           
   419                           ;main.c: 178: TXSTAbits.TXEN = 0b1;
   420  0004C6  8AAC               	bsf	4012,5,c	;volatile
   421                           
   422                           ;main.c: 180: TRISCbits.TRISC6 = 0b0;
   423  0004C8  9C94               	bcf	3988,6,c	;volatile
   424                           
   425                           ;main.c: 181: TRISCbits.TRISC7 = 0b1;
   426  0004CA  8E94               	bsf	3988,7,c	;volatile
   427                           
   428                           ;main.c: 183: _delay((unsigned long)((1000)*(2000000/4000.0)));
   429  0004CC  0E03               	movlw	3
   430  0004CE  6E29               	movwf	(??_UART_Init+1)& (0+255),c
   431  0004D0  0E8A               	movlw	138
   432  0004D2  6E28               	movwf	??_UART_Init& (0+255),c
   433  0004D4  0E56               	movlw	86
   434  0004D6                     u157:
   435  0004D6  2EE8               	decfsz	wreg,f,c
   436  0004D8  D7FE               	bra	u157
   437  0004DA  2E28               	decfsz	??_UART_Init& (0+255),f,c
   438  0004DC  D7FC               	bra	u157
   439  0004DE  2E29               	decfsz	(??_UART_Init+1)& (0+255),f,c
   440  0004E0  D7FA               	bra	u157
   441  0004E2  0012               	return	
   442  0004E4                     __end_of_UART_Init:
   443                           	opt stack 0
   444                           tblptru	equ	0xFF8
   445                           tblptrh	equ	0xFF7
   446                           postinc0	equ	0xFEE
   447                           wreg	equ	0xFE8
   448                           postdec1	equ	0xFE5
   449                           fsr1h	equ	0xFE2
   450                           fsr1l	equ	0xFE1
   451                           
   452 ;; *************** function _MoveNextPosition *****************
   453 ;; Defined at:
   454 ;;		line 217 in file "main.c"
   455 ;; Parameters:    Size  Location     Type
   456 ;;		None
   457 ;; Auto vars:     Size  Location     Type
   458 ;;		None
   459 ;; Return value:  Size  Location     Type
   460 ;;                  1    wreg      void 
   461 ;; Registers used:
   462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   463 ;; Tracked objects:
   464 ;;		On entry : 0/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   468 ;;      Params:         0       0       0       0
   469 ;;      Locals:         0       0       0       0
   470 ;;      Temps:          0       0       0       0
   471 ;;      Totals:         0       0       0       0
   472 ;;Total ram usage:        0 bytes
   473 ;; Hardware stack levels used:    1
   474 ;; Hardware stack levels required when called:    4
   475 ;; This function calls:
   476 ;;		_EmptyMovementString
   477 ;; This function is called by:
   478 ;;		_main
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           
   482                           	psect	text2
   483  000552                     __ptext2:
   484                           	opt stack 0
   485  000552                     _MoveNextPosition:
   486                           	opt stack 26
   487                           
   488                           ;main.c: 218: EmptyMovementString(movementString);
   489                           
   490                           ;incstack = 0
   491  000552  0E00               	movlw	low _movementString
   492  000554  6E2E               	movwf	EmptyMovementString@movementString,c
   493  000556  0E01               	movlw	high _movementString
   494  000558  6E2F               	movwf	EmptyMovementString@movementString+1,c
   495  00055A  EC27  F002         	call	_EmptyMovementString	;wreg free
   496  00055E  0012               	return		;funcret
   497  000560                     __end_of_MoveNextPosition:
   498                           	opt stack 0
   499                           tblptru	equ	0xFF8
   500                           tblptrh	equ	0xFF7
   501                           postinc0	equ	0xFEE
   502                           wreg	equ	0xFE8
   503                           postdec1	equ	0xFE5
   504                           fsr1h	equ	0xFE2
   505                           fsr1l	equ	0xFE1
   506                           
   507 ;; *************** function _MoveInitPosition *****************
   508 ;; Defined at:
   509 ;;		line 206 in file "main.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;  i               2   49[COMRAM] unsigned int 
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   523 ;;      Params:         0       0       0       0
   524 ;;      Locals:         2       0       0       0
   525 ;;      Temps:          0       0       0       0
   526 ;;      Totals:         2       0       0       0
   527 ;;Total ram usage:        2 bytes
   528 ;; Hardware stack levels used:    1
   529 ;; Hardware stack levels required when called:    4
   530 ;; This function calls:
   531 ;;		_EmptyMovementString
   532 ;; This function is called by:
   533 ;;		_main
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           	psect	text3
   538  0004E4                     __ptext3:
   539                           	opt stack 0
   540  0004E4                     _MoveInitPosition:
   541                           	opt stack 26
   542                           
   543                           ;main.c: 207: EmptyMovementString(movementString);
   544                           
   545                           ;incstack = 0
   546  0004E4  0E00               	movlw	low _movementString
   547  0004E6  6E2E               	movwf	EmptyMovementString@movementString,c
   548  0004E8  0E01               	movlw	high _movementString
   549  0004EA  6E2F               	movwf	EmptyMovementString@movementString+1,c
   550  0004EC  EC27  F002         	call	_EmptyMovementString	;wreg free
   551                           
   552                           ;main.c: 208: for(unsigned int i = 0; i < SERVOSETS; i++){
   553  0004F0  0E00               	movlw	0
   554  0004F2  6E33               	movwf	MoveInitPosition@i+1,c
   555  0004F4  0E00               	movlw	0
   556  0004F6  6E32               	movwf	MoveInitPosition@i,c
   557  0004F8                     l843:
   558  0004F8  0E79               	movlw	low _SERVOSETS
   559  0004FA  6EF6               	movwf	tblptrl,c
   560  0004FC                     	if	0	;There is only one active tblptr byte
   561  0004FC                     	endif
   562  0004FC                     	if	0	;There are less than 3 active tblptr bytes
   563  0004FC                     	endif
   564  0004FC  0009               	tblrd		*+
   565  0004FE  50F5               	movf	tablat,w,c
   566  000500  5C32               	subwf	MoveInitPosition@i,w,c
   567  000502  0009               	tblrd		*+
   568  000504  50F5               	movf	tablat,w,c
   569  000506  5833               	subwfb	MoveInitPosition@i+1,w,c
   570  000508  B0D8               	btfsc	status,0,c
   571  00050A  0012               	return	
   572  00050C  4A32               	infsnz	MoveInitPosition@i,f,c
   573  00050E  2A33               	incf	MoveInitPosition@i+1,f,c
   574  000510  D7F3               	goto	l843
   575  000512                     __end_of_MoveInitPosition:
   576                           	opt stack 0
   577                           tblptru	equ	0xFF8
   578                           tblptrh	equ	0xFF7
   579                           tblptrl	equ	0xFF6
   580                           tablat	equ	0xFF5
   581                           postinc0	equ	0xFEE
   582                           wreg	equ	0xFE8
   583                           postdec1	equ	0xFE5
   584                           fsr1h	equ	0xFE2
   585                           fsr1l	equ	0xFE1
   586                           status	equ	0xFD8
   587                           
   588 ;; *************** function _Move2462Positions *****************
   589 ;; Defined at:
   590 ;;		line 213 in file "main.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;		None
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   604 ;;      Params:         0       0       0       0
   605 ;;      Locals:         0       0       0       0
   606 ;;      Temps:          0       0       0       0
   607 ;;      Totals:         0       0       0       0
   608 ;;Total ram usage:        0 bytes
   609 ;; Hardware stack levels used:    1
   610 ;; Hardware stack levels required when called:    4
   611 ;; This function calls:
   612 ;;		_EmptyMovementString
   613 ;; This function is called by:
   614 ;;		_main
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           	psect	text4
   619  000560                     __ptext4:
   620                           	opt stack 0
   621  000560                     _Move2462Positions:
   622                           	opt stack 26
   623                           
   624                           ;main.c: 214: EmptyMovementString(movementString);
   625                           
   626                           ;incstack = 0
   627  000560  0E00               	movlw	low _movementString
   628  000562  6E2E               	movwf	EmptyMovementString@movementString,c
   629  000564  0E01               	movlw	high _movementString
   630  000566  6E2F               	movwf	EmptyMovementString@movementString+1,c
   631  000568  EC27  F002         	call	_EmptyMovementString	;wreg free
   632  00056C  0012               	return		;funcret
   633  00056E                     __end_of_Move2462Positions:
   634                           	opt stack 0
   635                           tblptru	equ	0xFF8
   636                           tblptrh	equ	0xFF7
   637                           tblptrl	equ	0xFF6
   638                           tablat	equ	0xFF5
   639                           postinc0	equ	0xFEE
   640                           wreg	equ	0xFE8
   641                           postdec1	equ	0xFE5
   642                           fsr1h	equ	0xFE2
   643                           fsr1l	equ	0xFE1
   644                           status	equ	0xFD8
   645                           
   646 ;; *************** function _EmptyMovementString *****************
   647 ;; Defined at:
   648 ;;		line 221 in file "main.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;  movementStri    2   45[COMRAM] PTR unsigned char 
   651 ;;		 -> movementString(512), 
   652 ;; Auto vars:     Size  Location     Type
   653 ;;  i               2   47[COMRAM] unsigned int 
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   663 ;;      Params:         2       0       0       0
   664 ;;      Locals:         2       0       0       0
   665 ;;      Temps:          0       0       0       0
   666 ;;      Totals:         4       0       0       0
   667 ;;Total ram usage:        4 bytes
   668 ;; Hardware stack levels used:    1
   669 ;; Hardware stack levels required when called:    3
   670 ;; This function calls:
   671 ;;		_strlen
   672 ;; This function is called by:
   673 ;;		_MoveInitPosition
   674 ;;		_Move2462Positions
   675 ;;		_MoveNextPosition
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           	psect	text5
   680  00044E                     __ptext5:
   681                           	opt stack 0
   682  00044E                     _EmptyMovementString:
   683                           	opt stack 26
   684                           
   685                           ;main.c: 222: for (unsigned int i = 0;i < strlen(movementString); i++) {
   686                           
   687                           ;incstack = 0
   688  00044E  0E00               	movlw	0
   689  000450  6E31               	movwf	EmptyMovementString@i+1,c
   690  000452  0E00               	movlw	0
   691  000454  6E30               	movwf	EmptyMovementString@i,c
   692  000456  D00A               	goto	l92
   693  000458                     
   694                           ;main.c: 223: movementString[i] = '\r';
   695  000458  5030               	movf	EmptyMovementString@i,w,c
   696  00045A  242E               	addwf	EmptyMovementString@movementString,w,c
   697  00045C  6ED9               	movwf	fsr2l,c
   698  00045E  5031               	movf	EmptyMovementString@i+1,w,c
   699  000460  202F               	addwfc	EmptyMovementString@movementString+1,w,c
   700  000462  6EDA               	movwf	fsr2h,c
   701  000464  0E0D               	movlw	13
   702  000466  6EDF               	movwf	indf2,c
   703  000468  4A30               	infsnz	EmptyMovementString@i,f,c
   704  00046A  2A31               	incf	EmptyMovementString@i+1,f,c
   705  00046C                     l92:
   706  00046C  C02E  F028         	movff	EmptyMovementString@movementString,strlen@s
   707  000470  C02F  F029         	movff	EmptyMovementString@movementString+1,strlen@s+1
   708  000474  EC0A  F002         	call	_strlen	;wreg free
   709  000478  5028               	movf	?_strlen,w,c
   710  00047A  5C30               	subwf	EmptyMovementString@i,w,c
   711  00047C  5029               	movf	?_strlen+1,w,c
   712  00047E  5831               	subwfb	EmptyMovementString@i+1,w,c
   713  000480  B0D8               	btfsc	status,0,c
   714  000482  0012               	return	
   715  000484  D7E9               	goto	l93
   716  000486                     __end_of_EmptyMovementString:
   717                           	opt stack 0
   718                           tblptru	equ	0xFF8
   719                           tblptrh	equ	0xFF7
   720                           tblptrl	equ	0xFF6
   721                           tablat	equ	0xFF5
   722                           postinc0	equ	0xFEE
   723                           wreg	equ	0xFE8
   724                           postdec1	equ	0xFE5
   725                           fsr1h	equ	0xFE2
   726                           fsr1l	equ	0xFE1
   727                           indf2	equ	0xFDF
   728                           fsr2h	equ	0xFDA
   729                           fsr2l	equ	0xFD9
   730                           status	equ	0xFD8
   731                           
   732 ;; *************** function _strlen *****************
   733 ;; Defined at:
   734 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;  s               2   39[COMRAM] PTR const unsigned char 
   737 ;;		 -> movementString(512), 
   738 ;; Auto vars:     Size  Location     Type
   739 ;;  cp              2   43[COMRAM] PTR const unsigned char 
   740 ;;		 -> movementString(512), 
   741 ;; Return value:  Size  Location     Type
   742 ;;                  2   39[COMRAM] unsigned int 
   743 ;; Registers used:
   744 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   750 ;;      Params:         2       0       0       0
   751 ;;      Locals:         2       0       0       0
   752 ;;      Temps:          2       0       0       0
   753 ;;      Totals:         6       0       0       0
   754 ;;Total ram usage:        6 bytes
   755 ;; Hardware stack levels used:    1
   756 ;; Hardware stack levels required when called:    2
   757 ;; This function calls:
   758 ;;		Nothing
   759 ;; This function is called by:
   760 ;;		_EmptyMovementString
   761 ;;		_UART_Write_String
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           	psect	text6
   766  000414                     __ptext6:
   767                           	opt stack 0
   768  000414                     _strlen:
   769                           	opt stack 26
   770                           
   771                           ;incstack = 0
   772  000414  C028  F02C         	movff	strlen@s,strlen@cp
   773  000418  C029  F02D         	movff	strlen@s+1,strlen@cp+1
   774  00041C  D002               	goto	l653
   775  00041E  4A2C               	infsnz	strlen@cp,f,c
   776  000420  2A2D               	incf	strlen@cp+1,f,c
   777  000422                     l653:
   778  000422  C02C  FFD9         	movff	strlen@cp,fsr2l
   779  000426  C02D  FFDA         	movff	strlen@cp+1,fsr2h
   780  00042A  50DF               	movf	indf2,w,c
   781  00042C  A4D8               	btfss	status,2,c
   782  00042E  D7F7               	goto	l654
   783  000430  C028  F02A         	movff	strlen@s,??_strlen
   784  000434  C029  F02B         	movff	strlen@s+1,??_strlen+1
   785  000438  1E2A               	comf	??_strlen,f,c
   786  00043A  1E2B               	comf	??_strlen+1,f,c
   787  00043C  4A2A               	infsnz	??_strlen,f,c
   788  00043E  2A2B               	incf	??_strlen+1,f,c
   789  000440  502C               	movf	strlen@cp,w,c
   790  000442  242A               	addwf	??_strlen,w,c
   791  000444  6E28               	movwf	?_strlen,c
   792  000446  502D               	movf	strlen@cp+1,w,c
   793  000448  202B               	addwfc	??_strlen+1,w,c
   794  00044A  6E29               	movwf	?_strlen+1,c
   795  00044C  0012               	return	
   796  00044E                     __end_of_strlen:
   797                           	opt stack 0
   798                           tblptru	equ	0xFF8
   799                           tblptrh	equ	0xFF7
   800                           tblptrl	equ	0xFF6
   801                           tablat	equ	0xFF5
   802                           postinc0	equ	0xFEE
   803                           wreg	equ	0xFE8
   804                           postdec1	equ	0xFE5
   805                           fsr1h	equ	0xFE2
   806                           fsr1l	equ	0xFE1
   807                           indf2	equ	0xFDF
   808                           fsr2h	equ	0xFDA
   809                           fsr2l	equ	0xFD9
   810                           status	equ	0xFD8
   811                           
   812 ;; *************** function _InitApp *****************
   813 ;; Defined at:
   814 ;;		line 28 in file "user.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		None
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   828 ;;      Params:         0       0       0       0
   829 ;;      Locals:         0       0       0       0
   830 ;;      Temps:          0       0       0       0
   831 ;;      Totals:         0       0       0       0
   832 ;;Total ram usage:        0 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    2
   835 ;; This function calls:
   836 ;;		Nothing
   837 ;; This function is called by:
   838 ;;		_main
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text7
   843  00056E                     __ptext7:
   844                           	opt stack 0
   845  00056E                     _InitApp:
   846                           	opt stack 28
   847                           
   848                           ;incstack = 0
   849  00056E  0012               	return		;funcret
   850  000570                     __end_of_InitApp:
   851                           	opt stack 0
   852                           tblptru	equ	0xFF8
   853                           tblptrh	equ	0xFF7
   854                           tblptrl	equ	0xFF6
   855                           tablat	equ	0xFF5
   856                           postinc0	equ	0xFEE
   857                           wreg	equ	0xFE8
   858                           postdec1	equ	0xFE5
   859                           fsr1h	equ	0xFE2
   860                           fsr1l	equ	0xFE1
   861                           indf2	equ	0xFDF
   862                           fsr2h	equ	0xFDA
   863                           fsr2l	equ	0xFD9
   864                           status	equ	0xFD8
   865                           
   866 ;; *************** function _ConfigureOscillator *****************
   867 ;; Defined at:
   868 ;;		line 23 in file "system.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, status,2
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   882 ;;      Params:         0       0       0       0
   883 ;;      Locals:         0       0       0       0
   884 ;;      Temps:          0       0       0       0
   885 ;;      Totals:         0       0       0       0
   886 ;;Total ram usage:        0 bytes
   887 ;; Hardware stack levels used:    1
   888 ;; Hardware stack levels required when called:    2
   889 ;; This function calls:
   890 ;;		Nothing
   891 ;; This function is called by:
   892 ;;		_main
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896                           	psect	text8
   897  000538                     __ptext8:
   898                           	opt stack 0
   899  000538                     _ConfigureOscillator:
   900                           	opt stack 28
   901                           
   902                           ;system.c: 25: OSCTUNEbits.INTSRC = 0b1;
   903                           
   904                           ;incstack = 0
   905  000538  8E9B               	bsf	3995,7,c	;volatile
   906                           
   907                           ;system.c: 26: OSCTUNEbits.PLLEN = 0b0;
   908  00053A  9C9B               	bcf	3995,6,c	;volatile
   909                           
   910                           ;system.c: 27: OSCTUNEbits.TUN = 0b00000;
   911  00053C  909B               	bcf	3995,0,c	;volatile
   912  00053E  929B               	bcf	3995,1,c	;volatile
   913  000540  949B               	bcf	3995,2,c	;volatile
   914  000542  969B               	bcf	3995,3,c	;volatile
   915  000544  989B               	bcf	3995,4,c	;volatile
   916                           
   917                           ;system.c: 28: OSCCONbits.IDLEN = 0b0;
   918  000546  9ED3               	bcf	4051,7,c	;volatile
   919                           
   920                           ;system.c: 29: OSCCONbits.IRCF = 0b101;
   921  000548  50D3               	movf	4051,w,c	;volatile
   922  00054A  0B8F               	andlw	-113
   923  00054C  0950               	iorlw	80
   924  00054E  6ED3               	movwf	4051,c	;volatile
   925  000550  0012               	return		;funcret
   926  000552                     __end_of_ConfigureOscillator:
   927                           	opt stack 0
   928                           tblptru	equ	0xFF8
   929                           tblptrh	equ	0xFF7
   930                           tblptrl	equ	0xFF6
   931                           tablat	equ	0xFF5
   932                           postinc0	equ	0xFEE
   933                           wreg	equ	0xFE8
   934                           postdec1	equ	0xFE5
   935                           fsr1h	equ	0xFE2
   936                           fsr1l	equ	0xFE1
   937                           indf2	equ	0xFDF
   938                           fsr2h	equ	0xFDA
   939                           fsr2l	equ	0xFD9
   940                           status	equ	0xFD8
   941                           
   942 ;; *************** function _low_isr *****************
   943 ;; Defined at:
   944 ;;		line 67 in file "interrupts.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;		None
   947 ;; Auto vars:     Size  Location     Type
   948 ;;		None
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		None
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   958 ;;      Params:         0       0       0       0
   959 ;;      Locals:         0       0       0       0
   960 ;;      Temps:         21       0       0       0
   961 ;;      Totals:        21       0       0       0
   962 ;;Total ram usage:       21 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; Hardware stack levels required when called:    1
   965 ;; This function calls:
   966 ;;		Nothing
   967 ;; This function is called by:
   968 ;;		Interrupt level 1
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	intcodelo
   973  000018                     __pintcodelo:
   974                           	opt stack 0
   975  000018                     _low_isr:
   976                           	opt stack 26
   977                           
   978                           ;incstack = 0
   979  000018  8036               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   980  00001A  CFD8 F013          	movff	status,??_low_isr
   981  00001E  CFE8 F014          	movff	wreg,??_low_isr+1
   982  000022  CFE0 F015          	movff	bsr,??_low_isr+2
   983  000026  CFFA F016          	movff	pclath,??_low_isr+3
   984  00002A  CFFB F017          	movff	pclatu,??_low_isr+4
   985  00002E  CFE9 F018          	movff	fsr0l,??_low_isr+5
   986  000032  CFEA F019          	movff	fsr0h,??_low_isr+6
   987  000036  CFE1 F01A          	movff	fsr1l,??_low_isr+7
   988  00003A  CFE2 F01B          	movff	fsr1h,??_low_isr+8
   989  00003E  CFD9 F01C          	movff	fsr2l,??_low_isr+9
   990  000042  CFDA F01D          	movff	fsr2h,??_low_isr+10
   991  000046  CFF3 F01E          	movff	prodl,??_low_isr+11
   992  00004A  CFF4 F01F          	movff	prodh,??_low_isr+12
   993  00004E  CFF6 F020          	movff	tblptrl,??_low_isr+13
   994  000052  CFF7 F021          	movff	tblptrh,??_low_isr+14
   995  000056  CFF8 F022          	movff	tblptru,??_low_isr+15
   996  00005A  CFF5 F023          	movff	tablat,??_low_isr+16
   997  00005E  C036  F024         	movff	btemp,??_low_isr+17
   998  000062  C037  F025         	movff	btemp+1,??_low_isr+18
   999  000066  C038  F026         	movff	btemp+2,??_low_isr+19
  1000  00006A  C039  F027         	movff	btemp+3,??_low_isr+20
  1001  00006E  C027  F039         	movff	??_low_isr+20,btemp+3
  1002  000072  C026  F038         	movff	??_low_isr+19,btemp+2
  1003  000076  C025  F037         	movff	??_low_isr+18,btemp+1
  1004  00007A  C024  F036         	movff	??_low_isr+17,btemp
  1005  00007E  C023  FFF5         	movff	??_low_isr+16,tablat
  1006  000082  C022  FFF8         	movff	??_low_isr+15,tblptru
  1007  000086  C021  FFF7         	movff	??_low_isr+14,tblptrh
  1008  00008A  C020  FFF6         	movff	??_low_isr+13,tblptrl
  1009  00008E  C01F  FFF4         	movff	??_low_isr+12,prodh
  1010  000092  C01E  FFF3         	movff	??_low_isr+11,prodl
  1011  000096  C01D  FFDA         	movff	??_low_isr+10,fsr2h
  1012  00009A  C01C  FFD9         	movff	??_low_isr+9,fsr2l
  1013  00009E  C01B  FFE2         	movff	??_low_isr+8,fsr1h
  1014  0000A2  C01A  FFE1         	movff	??_low_isr+7,fsr1l
  1015  0000A6  C019  FFEA         	movff	??_low_isr+6,fsr0h
  1016  0000AA  C018  FFE9         	movff	??_low_isr+5,fsr0l
  1017  0000AE  C017  FFFB         	movff	??_low_isr+4,pclatu
  1018  0000B2  C016  FFFA         	movff	??_low_isr+3,pclath
  1019  0000B6  C015  FFE0         	movff	??_low_isr+2,bsr
  1020  0000BA  C014  FFE8         	movff	??_low_isr+1,wreg
  1021  0000BE  C013  FFD8         	movff	??_low_isr,status
  1022  0000C2  9036               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  1023  0000C4  0010               	retfie	
  1024  0000C6                     __end_of_low_isr:
  1025                           	opt stack 0
  1026                           pclatu	equ	0xFFB
  1027                           pclath	equ	0xFFA
  1028                           tblptru	equ	0xFF8
  1029                           tblptrh	equ	0xFF7
  1030                           tblptrl	equ	0xFF6
  1031                           tablat	equ	0xFF5
  1032                           prodh	equ	0xFF4
  1033                           prodl	equ	0xFF3
  1034                           postinc0	equ	0xFEE
  1035                           fsr0h	equ	0xFEA
  1036                           fsr0l	equ	0xFE9
  1037                           wreg	equ	0xFE8
  1038                           postdec1	equ	0xFE5
  1039                           fsr1h	equ	0xFE2
  1040                           fsr1l	equ	0xFE1
  1041                           bsr	equ	0xFE0
  1042                           indf2	equ	0xFDF
  1043                           fsr2h	equ	0xFDA
  1044                           fsr2l	equ	0xFD9
  1045                           status	equ	0xFD8
  1046                           
  1047 ;; *************** function _high_isr *****************
  1048 ;; Defined at:
  1049 ;;		line 27 in file "interrupts.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;		None
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;		None
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		None
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1063 ;;      Params:         0       0       0       0
  1064 ;;      Locals:         0       0       0       0
  1065 ;;      Temps:         18       0       0       0
  1066 ;;      Totals:        18       0       0       0
  1067 ;;Total ram usage:       18 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; This function calls:
  1070 ;;		Nothing
  1071 ;; This function is called by:
  1072 ;;		Interrupt level 2
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	intcode
  1077  000008                     __pintcode:
  1078                           	opt stack 0
  1079  000008                     _high_isr:
  1080                           	opt stack 26
  1081                           
  1082                           ;incstack = 0
  1083  000008  8236               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1084  00000A  EDBF  F001         	call	int_func,f	;refresh shadow registers
  1085                           pclatu	equ	0xFFB
  1086                           pclath	equ	0xFFA
  1087                           tblptru	equ	0xFF8
  1088                           tblptrh	equ	0xFF7
  1089                           tblptrl	equ	0xFF6
  1090                           tablat	equ	0xFF5
  1091                           prodh	equ	0xFF4
  1092                           prodl	equ	0xFF3
  1093                           postinc0	equ	0xFEE
  1094                           fsr0h	equ	0xFEA
  1095                           fsr0l	equ	0xFE9
  1096                           wreg	equ	0xFE8
  1097                           postdec1	equ	0xFE5
  1098                           fsr1h	equ	0xFE2
  1099                           fsr1l	equ	0xFE1
  1100                           bsr	equ	0xFE0
  1101                           indf2	equ	0xFDF
  1102                           fsr2h	equ	0xFDA
  1103                           fsr2l	equ	0xFD9
  1104                           status	equ	0xFD8
  1105                           
  1106                           	psect	intcode_body
  1107  00037E                     __pintcode_body:
  1108                           	opt stack 26
  1109  00037E                     int_func:
  1110                           	opt stack 26
  1111  00037E  0006               	pop		; remove dummy address from shadow register refresh
  1112  000380  CFFA F001          	movff	pclath,??_high_isr
  1113  000384  CFFB F002          	movff	pclatu,??_high_isr+1
  1114  000388  CFE9 F003          	movff	fsr0l,??_high_isr+2
  1115  00038C  CFEA F004          	movff	fsr0h,??_high_isr+3
  1116  000390  CFE1 F005          	movff	fsr1l,??_high_isr+4
  1117  000394  CFE2 F006          	movff	fsr1h,??_high_isr+5
  1118  000398  CFD9 F007          	movff	fsr2l,??_high_isr+6
  1119  00039C  CFDA F008          	movff	fsr2h,??_high_isr+7
  1120  0003A0  CFF3 F009          	movff	prodl,??_high_isr+8
  1121  0003A4  CFF4 F00A          	movff	prodh,??_high_isr+9
  1122  0003A8  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  1123  0003AC  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  1124  0003B0  CFF8 F00D          	movff	tblptru,??_high_isr+12
  1125  0003B4  CFF5 F00E          	movff	tablat,??_high_isr+13
  1126  0003B8  C036  F00F         	movff	btemp,??_high_isr+14
  1127  0003BC  C037  F010         	movff	btemp+1,??_high_isr+15
  1128  0003C0  C038  F011         	movff	btemp+2,??_high_isr+16
  1129  0003C4  C039  F012         	movff	btemp+3,??_high_isr+17
  1130  0003C8  C012  F039         	movff	??_high_isr+17,btemp+3
  1131  0003CC  C011  F038         	movff	??_high_isr+16,btemp+2
  1132  0003D0  C010  F037         	movff	??_high_isr+15,btemp+1
  1133  0003D4  C00F  F036         	movff	??_high_isr+14,btemp
  1134  0003D8  C00E  FFF5         	movff	??_high_isr+13,tablat
  1135  0003DC  C00D  FFF8         	movff	??_high_isr+12,tblptru
  1136  0003E0  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  1137  0003E4  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  1138  0003E8  C00A  FFF4         	movff	??_high_isr+9,prodh
  1139  0003EC  C009  FFF3         	movff	??_high_isr+8,prodl
  1140  0003F0  C008  FFDA         	movff	??_high_isr+7,fsr2h
  1141  0003F4  C007  FFD9         	movff	??_high_isr+6,fsr2l
  1142  0003F8  C006  FFE2         	movff	??_high_isr+5,fsr1h
  1143  0003FC  C005  FFE1         	movff	??_high_isr+4,fsr1l
  1144  000400  C004  FFEA         	movff	??_high_isr+3,fsr0h
  1145  000404  C003  FFE9         	movff	??_high_isr+2,fsr0l
  1146  000408  C002  FFFB         	movff	??_high_isr+1,pclatu
  1147  00040C  C001  FFFA         	movff	??_high_isr,pclath
  1148  000410  9236               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1149  000412  0011               	retfie		f
  1150  000414                     __end_of_high_isr:
  1151                           	opt stack 0
  1152                           pclatu	equ	0xFFB
  1153                           pclath	equ	0xFFA
  1154                           tblptru	equ	0xFF8
  1155                           tblptrh	equ	0xFF7
  1156                           tblptrl	equ	0xFF6
  1157                           tablat	equ	0xFF5
  1158                           prodh	equ	0xFF4
  1159                           prodl	equ	0xFF3
  1160                           postinc0	equ	0xFEE
  1161                           fsr0h	equ	0xFEA
  1162                           fsr0l	equ	0xFE9
  1163                           wreg	equ	0xFE8
  1164                           postdec1	equ	0xFE5
  1165                           fsr1h	equ	0xFE2
  1166                           fsr1l	equ	0xFE1
  1167                           bsr	equ	0xFE0
  1168                           indf2	equ	0xFDF
  1169                           fsr2h	equ	0xFDA
  1170                           fsr2l	equ	0xFD9
  1171                           status	equ	0xFD8
  1172                           pclatu	equ	0xFFB
  1173                           pclath	equ	0xFFA
  1174                           tblptru	equ	0xFF8
  1175                           tblptrh	equ	0xFF7
  1176                           tblptrl	equ	0xFF6
  1177                           tablat	equ	0xFF5
  1178                           prodh	equ	0xFF4
  1179                           prodl	equ	0xFF3
  1180                           postinc0	equ	0xFEE
  1181                           fsr0h	equ	0xFEA
  1182                           fsr0l	equ	0xFE9
  1183                           wreg	equ	0xFE8
  1184                           postdec1	equ	0xFE5
  1185                           fsr1h	equ	0xFE2
  1186                           fsr1l	equ	0xFE1
  1187                           bsr	equ	0xFE0
  1188                           indf2	equ	0xFDF
  1189                           fsr2h	equ	0xFDA
  1190                           fsr2l	equ	0xFD9
  1191                           status	equ	0xFD8
  1192                           
  1193                           	psect	rparam
  1194  0000                     pclatu	equ	0xFFB
  1195                           pclath	equ	0xFFA
  1196                           tblptru	equ	0xFF8
  1197                           tblptrh	equ	0xFF7
  1198                           tblptrl	equ	0xFF6
  1199                           tablat	equ	0xFF5
  1200                           prodh	equ	0xFF4
  1201                           prodl	equ	0xFF3
  1202                           postinc0	equ	0xFEE
  1203                           fsr0h	equ	0xFEA
  1204                           fsr0l	equ	0xFE9
  1205                           wreg	equ	0xFE8
  1206                           postdec1	equ	0xFE5
  1207                           fsr1h	equ	0xFE2
  1208                           fsr1l	equ	0xFE1
  1209                           bsr	equ	0xFE0
  1210                           indf2	equ	0xFDF
  1211                           fsr2h	equ	0xFDA
  1212                           fsr2l	equ	0xFD9
  1213                           status	equ	0xFD8
  1214                           
  1215                           	psect	temp
  1216  000036                     btemp:
  1217                           	opt stack 0
  1218  000036                     	ds	1
  1219  0000                     int$flags	set	btemp
  1220  0000                     wtemp6	set	btemp+1
  1221                           pclatu	equ	0xFFB
  1222                           pclath	equ	0xFFA
  1223                           tblptru	equ	0xFF8
  1224                           tblptrh	equ	0xFF7
  1225                           tblptrl	equ	0xFF6
  1226                           tablat	equ	0xFF5
  1227                           prodh	equ	0xFF4
  1228                           prodl	equ	0xFF3
  1229                           postinc0	equ	0xFEE
  1230                           fsr0h	equ	0xFEA
  1231                           fsr0l	equ	0xFE9
  1232                           wreg	equ	0xFE8
  1233                           postdec1	equ	0xFE5
  1234                           fsr1h	equ	0xFE2
  1235                           fsr1l	equ	0xFE1
  1236                           bsr	equ	0xFE0
  1237                           indf2	equ	0xFDF
  1238                           fsr2h	equ	0xFDA
  1239                           fsr2l	equ	0xFD9
  1240                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    124
    Data        0
    BSS         512
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     53      53
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 512
		 -> movementString(BIGRAM[512]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 512
		 -> movementString(BIGRAM[512]), 

    EmptyMovementString@movementString	PTR unsigned char  size(2) Largest target is 512
		 -> movementString(BIGRAM[512]), 


Critical Paths under _main in COMRAM

    _main->_MoveInitPosition
    _MoveNextPosition->_EmptyMovementString
    _MoveInitPosition->_EmptyMovementString
    _Move2462Positions->_EmptyMovementString
    _EmptyMovementString->_strlen

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1726
                                             51 COMRAM     2     2      0
                _ConfigureOscillator
                            _InitApp
                  _Move2462Positions
                   _MoveInitPosition
                   _MoveNextPosition
                          _UART_Init
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            2     2      0       0
                                             39 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _MoveNextPosition                                     0     0      0     560
                _EmptyMovementString
 ---------------------------------------------------------------------------------
 (1) _MoveInitPosition                                     2     2      0     606
                                             49 COMRAM     2     2      0
                _EmptyMovementString
 ---------------------------------------------------------------------------------
 (1) _Move2462Positions                                    0     0      0     560
                _EmptyMovementString
 ---------------------------------------------------------------------------------
 (2) _EmptyMovementString                                  4     2      2     560
                                             45 COMRAM     4     2      2
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     242
                                             39 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _low_isr                                             21    21      0       0
                                             18 COMRAM    21    21      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                            18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _Move2462Positions
     _EmptyMovementString
       _strlen
   _MoveInitPosition
     _EmptyMovementString
       _strlen
   _MoveNextPosition
     _EmptyMovementString
       _strlen
   _UART_Init

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0     200      10       66.8%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     35      35       1       56.4%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      35       9        0.0%
DATA                 0      0     235      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Oct 03 02:30:09 2017

          __end_of_MoveNextPosition 0560                                  l59 049A  
                                l92 046C                                  l93 0458  
                                bsr 000FE0                         __CFG_BORV$3 000000  
                      __CFG_CP0$OFF 000000                        __CFG_CP1$OFF 000000  
                               l653 0422                                 l654 041E  
                               l843 04F8                        __CFG_CPB$OFF 000000  
                               u147 04A8                                 u157 04D6  
                      __CFG_CPD$OFF 000000                                 wreg 000FE8  
                      __CFG_IESO$ON 000000               ??_EmptyMovementString 0030  
                      __CFG_LVP$OFF 000000                        __CFG_WDT$OFF 000000  
                              _TRMT 007D61                                _main 0486  
                              fsr0h 000FEA                                fsr1h 000FE2  
                              fsr2h 000FDA                                fsr0l 000FE9  
                              indf2 000FDF                                fsr1l 000FE1  
                              fsr2l 000FD9                                btemp 0036  
                              prodh 000FF4                                prodl 000FF3  
                              start 00C6                       __CFG_MCLRE$ON 000000  
                      ___param_bank 000000                     __end_of_InitApp 0570  
                             ?_main 0001                               _SPBRG 000FAF  
                             _TXREG 000FAD                 _ConfigureOscillator 0538  
                     __CFG_PWRT$OFF 000000                       __CFG_WRT0$OFF 000000  
                     __CFG_WRT1$OFF 000000                      __CFG_EBTR0$OFF 000000  
                    __CFG_FCMEN$OFF 000000                      __CFG_EBTR1$OFF 000000  
                __size_of_UART_Init 002E                       __CFG_WRTB$OFF 000000  
                     __CFG_WRTC$OFF 000000                       __CFG_WRTD$OFF 000000  
                    __CFG_EBTRB$OFF 000000                     __end_of_low_isr 00C6  
                             pclath 000FFA                               tablat 000FF5  
                             status 000FD8                               wtemp6 0037  
                    __CFG_PBADEN$ON 000000                ?_ConfigureOscillator 0001  
                 ?_MoveInitPosition 0001                     __initialization 0512  
                      __end_of_main 04B6                  ??_MoveInitPosition 0032  
                            ??_main 0034                       __activetblptr 000001  
                   __CFG_BBSIZ$1024 000000                              _SPBRGH 000FB0  
                         ??_InitApp 0028               ??_ConfigureOscillator 0028  
                 __end_of_SERVOSETS 037B                      __CFG_XINST$OFF 000000  
                 __end_of_UART_Init 04E4                    __end_of_high_isr 0414  
                    __CFG_STVREN$ON 000000                              clear_0 051A  
                            _strlen 0414                     __CFG_BOREN$BOHW 000000  
                      __mediumconst 0000                           ??_low_isr 0013  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                          __accesstop 0060  
           __end_of__initialization 0526                       ___rparam_used 000001  
                    __pcstackCOMRAM 0001                   ?_MoveNextPosition 0001  
                ??_MoveNextPosition 0032                     __CFG_OSC$IRCIO7 000000  
                 _Move2462Positions 0560                  ?_Move2462Positions 0001  
__end_of_MAX_MOVEMENT_STRING_LENGTH 037D          _MAX_MOVEMENT_STRING_LENGTH 037B  
              EmptyMovementString@i 0030                 ??_Move2462Positions 0032  
                           ?_strlen 0028         __end_of_EmptyMovementString 0486  
         __end_of_Move2462Positions 056E                           ?_high_isr 0001  
                           _InitApp 056E   EmptyMovementString@movementString 002E  
                           __Hparam 0000                             __Lparam 0000  
                      __psmallconst 0300                             __pcinit 0512  
                           __ramtop 0300                             __ptext0 0486  
                           __ptext1 04B6                             __ptext2 0552  
                           __ptext3 04E4                             __ptext4 0560  
                           __ptext5 044E                             __ptext6 0414  
                           __ptext7 056E                             __ptext8 0538  
                   __size_of_strlen 003A           __size_of_MoveInitPosition 002E  
                           _low_isr 0018                          ??_high_isr 0001  
                    __pintcode_body 037E                end_of_initialization 0526  
                           int_func 037E                   __end_of_servosets 0379  
                         _RCSTAbits 000FAB                             postdec1 000FE5  
                           postinc0 000FEE                           _SERVOSETS 0379  
                           strlen@s 0028                           _UART_Init 04B6  
                         _TRISCbits 000F94          __size_of_Move2462Positions 000E  
       __end_of_ConfigureOscillator 0552                      _movementString 0100  
                         _TXSTAbits 000FAC                         _BAUDCONbits 000FB8  
                        ?_UART_Init 0001                      __end_of_strlen 044E  
               start_initialization 0512           __size_of_MoveNextPosition 000E  
                  __CFG_LPT1OSC$OFF 000000                            ??_strlen 002A  
                       __pbssBIGRAM 0100                    _MoveInitPosition 04E4  
                 __size_of_high_isr 040C                            ?_InitApp 0001  
                         __pintcode 0008                         __pintcodelo 0018  
                       ??_UART_Init 0028                         __smallconst 0300  
                          ?_low_isr 0001        __size_of_EmptyMovementString 0038  
                  __CFG_WDTPS$32768 000000                           _servosets 0301  
                  _MoveNextPosition 0552                    __size_of_InitApp 0002  
                          __Hrparam 0000                            __Lrparam 0000  
                      __Lsmallconst 0300                   MoveInitPosition@i 0032  
                  __size_of_low_isr 00AE                            _high_isr 0008  
                     __size_of_main 0030        __size_of_ConfigureOscillator 001A  
          __end_of_MoveInitPosition 0512                            int$flags 0036  
                       _OSCTUNEbits 000F9B                            intlevel1 0000  
                          intlevel2 0000                          _OSCCONbits 000FD3  
               _EmptyMovementString 044E                            strlen@cp 002C  
              ?_EmptyMovementString 002E  
